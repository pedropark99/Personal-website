<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>home |&gt; dplyr::glimpse()</title>
<link>https://pedro-faria.netlify.app/index.html</link>
<atom:link href="https://pedro-faria.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog about programming and data analysis, specially with R and Python</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Mon, 06 Mar 2023 03:00:00 GMT</lastBuildDate>
<item>
  <title>Um estudo de caso sobre Data Storytelling em alguns dos maiores bancos brasileiros</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/pt/index.html</link>
  <description><![CDATA[ 




<section id="introdução" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introdução</h1>
<p>Este artigo discute como eu melhorei o meu processo de <em>Data Storytelling</em> dentro das minhas apresentações e relatórios entregues ao Banco BMG e ao Banco Pan (os quais são dois dos maiores bancos comerciais do mercado brasileiro). Busco compartilhar o que aprendi nesse processo, e dou algumas dicas que possivelmente vão ajudá-lo a construir relatórios de dados mais intuitivos, cativantes, claros e efetivos.</p>
<p>Em resumo, vamos discutir neste artigo as seguintes dicas:</p>
<ul>
<li><em>Data Storytelling</em> é sobre contar histórias através de dados;</li>
<li>Histórias tem estrutura, use essas estruturas ao seu favor;</li>
<li>Evite dividir muito a atenção com textos longos em seus slides;</li>
<li>Trace relações entre os seus dados;</li>
<li>Construa sua história em torno de uma mensagem principal;</li>
<li>Entregue sua história aos poucos;</li>
</ul>
<p>A maior parte desses conhecimentos foram construídos através de intensa pesquisa, reflexão e planejamento sobre as minhas apresentações, e, posteriormente, adquirindo feedbacks, e realizando pequenos ajustes aqui e ali.</p>
<p>Como você pode esperar de todo grande trabalho como este, ele também envolveu outras pessoas. Durante esse processo, eu recebi ajuda e feedbacks de meus colegas de trabalho, <a href="https://www.linkedin.com/in/andressa-de-souza-freitas-697195177/">Andressa de Souza Freitas</a> e <a href="https://www.linkedin.com/in/guilhermeggarcia/">Guilherme Gomes</a>. Eu também tive uma grande ajuda da UX Designer <a href="https://www.linkedin.com/in/alefernandesbranding/">Alê Fernandes</a>. Vários dos conhecimentos apresentados aqui, eu aprendi na prática com a Alê. Esses conhecimentos revolucionaram a maneira como eu construo minhas apresentações, e, por isso, eu sou imensamente grato a ela ❤️.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Todos os dados, gráficos e imagens mostrados neste artigo são meramente ilustrativos. Todos os números apresentados foram gerados de forma aleatória por um computador! Portanto, eles não representam os dados reais de TakeBlip, do Banco BMG, ou do Banco Pan de nenhuma forma ou dimensão!</p>
</div>
</div>
</section>
<section id="resumo-da-estrutura-deste-artigo" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Resumo da estrutura deste artigo</h1>
<p>Na Seção&nbsp;3, eu forneço contexto sobre esses relatórios que eu apresentava para o Banco BMG e Banco Pan, qual era o formato desses relatórios e quais eram os seus principais problemas e limitações.</p>
<p>Mas a partir da Seção&nbsp;4, nós começamos a discutir sobre como melhorei esses relatórios. Você vai perceber que boa parte dessas melhorias estão concentradas em dois pontos:</p>
<ol type="1">
<li>construir uma apresentação que seja simples e clara;</li>
<li>construir uma apresentação que tenha uma boa estrutura, isto é, uma estrutura que te ajude a contar uma história através de seus dados;</li>
</ol>
<p>A Seção&nbsp;4.1 fornece duas dicas que te ajudam a trazer simplicidade e clareza para sua apresentação, além de discutir o porquê de textos longos em slides serem tão perversos para a atenção de seus espectadores.</p>
<p>Na Seção&nbsp;4.2 discuto algumas dicas sobre como formar o conteúdo da apresentação, mais especificamente, um conteúdo que te ajude a construir uma história em sua apresentação.</p>
<p>Já na Seção&nbsp;5, nós pegamos as dicas que discutimos até então no artigo, e tentamos aplicar elas sobre o slide mostrado em Figura&nbsp;3, com o objetivo de demonstrar como essas dicas podem melhorar sua apresentação.</p>
<p>Por último, na Seção&nbsp;6, nós discutimos bastante sobre estrutura. Mais especificamente, eu discuto dois exemplos de estruturas que podem servir como um guia, ao fornecer uma base simples que você pode utilizar para construir a sua história.</p>
<p>Enfim, vamos prosseguir…</p>
</section>
<section id="sec-como-era-antes" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Como era esse relatório antes ?</h1>
<p>Na época, estávamos construindo um relatório mensal contendo vários indicadores e gráficos que mostravam o estado atual e a evolução recente dos serviços e produtos do Banco BMG ofertados dentro do canal do WhatsApp.</p>
<p>Contudo, o formato dessa apresentação era problemático. Nós trazíamos uma <strong>quantidade monumental</strong> de informações para o banco. A apresentação usualmente trazia em torno de 40 slides diferentes, com aproximadamente 36 gráficos e 70 indicadores diferentes. Para mais, nós tentávamos apresentar todo esse volume de informações em uma reunião de apenas 1 hora.</p>
<p>O resultado final disso tudo era uma apresentação que trazia um volume monumental de informações, porém, que também trazia um <strong>volume muito pequeno de insights e novas ideias de negócio para os gestores</strong>.</p>
<p>Em Figura&nbsp;1 temos uma representação de um dos vários slides dessa apresentação<sup>1</sup>. Imagine que essa apresentação trazia em torno de 40 slides semelhantes a esse:</p>
<div id="fig-print-report1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/print-report1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figura&nbsp;1: Representação de um slide da versão antiga do relatório</figcaption>
</figure>
</div>
<p>Perceba que esse slide se parece mais com uma página de um dashboard, do que de um relatório apresentando as últimas tendências do mercado ou do negócio do banco.</p>
<p><strong>Isso é muito importante!</strong> Se a sua apresentação traz vários indicadores diferentes espalhados pela página, sem contextualizá-los, sem relacioná-los uns com os outros, sem trazer o que eles significam em conjunto, essa apresentação vai muito provavelmente se parecer com os dashboards que você já produz para o seu cliente.</p>
<p>Tendo isso em mente, qual é o incentivo/motivo/razão que o seu cliente tem para assistir à sua apresentação? Em outras palavras, se a sua apresentação mostra os mesmos gráficos/indicadores que os seus dashboards apresentam, o seu cliente não tem incentivo/motivo nenhum para assistir à sua apresentação. Pois <strong>não há nada na sua apresentação que seja novo</strong>, ou nenhuma informação da qual o seu cliente não tenha já acesso diretamente.</p>
</section>
<section id="sec-como-melhorar" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Como podemos melhorar ?</h1>
<p>Agora que você possui uma noção do tamanho do problema que as versões anteriores desses relatórios representavam, nas próximas seções deste artigo, vou discutir algumas dicas essenciais que demonstram como nós podemos melhorar o modelo de apresentação mostrado em Figura&nbsp;1.</p>
<p>No meu entendimento, boa parte do sucesso em <strong>data storytelling</strong> pode ser resumido em duas ações, ou dois objetivos principais:</p>
<ol type="1">
<li>Evitar itens que dispersam a atenção dos nossos espectadores;</li>
<li>Construir uma história cativante para a nossa apresentação;</li>
</ol>
<p>O primeiro item acima está mais relacionado à <strong>clareza e simplicidade</strong> da apresentação, enquanto o segundo item está mais relacionado ao <strong>conteúdo e estrutura</strong> da apresentação.</p>
<p>Vamos começar pelo primeiro item…</p>
<section id="sec-guerra-atencao" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="sec-guerra-atencao"><span class="header-section-number">4.1</span> Uma guerra constante pela atenção</h2>
<p>Quando estamos apresentando algo, estamos constantemente batalhando pela atenção dos nossos espectadores. Essa é uma batalha difícil, não apenas porque nós podemos (sem querer) atrair a atenção para os lugares errados, mas também porque existem muitas fontes de distração no mundo moderno (e.g.&nbsp;celulares, emails, etc.)!</p>
<p>Um bom <strong>data storytelling</strong> depende de você contar uma história cativante, que consiga capturar a atenção de seus espectadores. Por isso, as próximas seções vão focar bastante em dicas que contribuam para essa captura, ou que te ajudam a não dissipar, reduzir ou atrapalhar a atenção desses espectadores.</p>
<section id="sec-texto-longo" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="sec-texto-longo"><span class="header-section-number">4.1.1</span> Por que evitar textos longos em seus slides?</h3>
<p>Tente ser parsimonioso nos seus slides! Isto é, tente incluir o mínimo possível de informação dentro dele. Se você precisa repassar várias informações em um slide, tente incorporar o máximo possível desse conteúdo em sua fala, e o mínino possível dele em forma escrita neste slide. Em geral, evite ao máximo incluir textos muito longos em seus slides.</p>
<p>É estranho pensar nisso, mas geralmente, os gestores vão participar e assistir à sua apresentação porque eles estão interessados no que <strong>você</strong> tem a dizer sobre o negócio deles. Portanto, os seus slides são apenas um material de suporte, eles devem ser secundários, um coadjuvante de sua apresentação. Pois a peça principal da apresentação deve ser sempre a sua fala e a história que você quer contar através dela.</p>
<p>Veja o slide em Figura&nbsp;2 como exemplo. O problema principal desse slide, é que ele <strong>divide muito a atenção de seu espectador</strong>.</p>
<div id="fig-texto-longo" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/texto-longo.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figura&nbsp;2: Slide com um parágrafo longo</figcaption>
</figure>
</div>
<p>Ao apresentar um slide, os seus espectadores tem que prestar atenção na sua fala. Isto é, no que você está comunicando verbalmente durante a apresentação. E ao mesmo tempo, eles também precisam prestar atenção no conteúdo do slide. Contudo, esse longo parágrafo no canto esquerdo do slide mostrado em Figura&nbsp;2 é problemático. <strong>Pois ele chama atenção demais!</strong></p>
<p>Esse elemento desperta tanto a nossa curiosidade, que ao ver esse slide, você (leitor deste artigo) provavelmente tentou ler esse texto longo antes mesmo de ler o que estou descrevendo agora neste parágrafo. O mesmo vai acontecer com os espectadores de sua apresentação. Ou seja, os seus espectadores vão imediatamente tentar ler esse parágrafo longo.</p>
<p>Contudo, ler e interpretar um texto longo, exige certo esforço e muita atenção. Como resultado, enquanto os seus espectadores leêm esse texto, eles não vão conseguir prestar atenção em outros elementos de sua apresentação. Por exemplo, na sua fala.</p>
<p>Isso pode ser crucial, pois talvez você traga uma informação a mais, ou uma conexão extremamente importante na sua fala, e eles podem acabar perdendo isso enquanto estão tentando ler esse texto. Portanto, evite ao máximo incluir textos muito longos em seus slides.</p>
</section>
<section id="entregue-sua-história-aos-poucos" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="entregue-sua-história-aos-poucos"><span class="header-section-number">4.1.2</span> Entregue sua história aos poucos</h3>
<p>O cérebro humano consegue processar uma quantidade limitada de informações de uma vez só. Como resultado, se você tentar explicar várias informações para os seus espectadores, em um único slide, eles vão acabar atingindo esse limite 🤯, e simplesmente não vão conseguir raciocinar, compreender ou assimilar o que você está explicando.</p>
<p>Portanto, <strong>entregue a sua história aos poucos</strong>. Evite condensar várias informações em um único slide! Divida o conteúdo em partes, e explique uma parte de cada vez!</p>
<p>Isso ajuda a tornar o conteúdo mais simples, e, como resultado, isso ajuda os seus espectadores a entenderem melhor sobre o que você está falando.</p>
<p>Pense um pouco sobre isso. Quando você busca aprender sobre um assunto complexo (e.g.&nbsp;regressão linear), você provavelmente divide o conteúdo em várias partes pequenas, e, vai aprendendo uma parte de cada vez. Não é assim que você faz? Então traga essa experiência também para as suas apresentações.</p>
</section>
</section>
<section id="sec-historia-conteudo" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="sec-historia-conteudo"><span class="header-section-number">4.2</span> Discutindo histórias e conteúdo</h2>
<p>Agora que vimos duas regras básicas sobre a atenção de seus espectadores (i.e.&nbsp;evite textos longos e entregue sua história aos poucos), vamos discutir algumas dicas sobre o conteúdo de sua apresentação, e, sobre como construir histórias com dados.</p>
<section id="data-storytelling-não-é-sobre-escolher-o-melhor-gráfico" class="level3" data-number="4.2.1">
<h3 data-number="4.2.1" class="anchored" data-anchor-id="data-storytelling-não-é-sobre-escolher-o-melhor-gráfico"><span class="header-section-number">4.2.1</span> <em>Data Storytelling</em> não é sobre escolher “o melhor gráfico”</h3>
<p>Alguns poucos analistas entendem “<em>data storytelling</em>” como um problema de visualização, ou, como a ciência de “escolher os melhores gráficos” para sua apresentação, ou como projetar gráficos inovadores, bonitos e complexos.</p>
<p>Contudo, <em>data storytelling</em> é sobre <strong>contar histórias com dados</strong>. Não sobre como construir visualizações. Escolher a visualização certa para apresentar os seus dados, torná-la melhor, mais bonita e mais limpa, é apenas uma parte do processo. Uma parte muito importante, pois isso vai te ajudar a contar sua história de uma maneira mais clara e eficaz, e, com isso, atingir um público maior.</p>
</section>
<section id="sec-relacoes" class="level3" data-number="4.2.2">
<h3 data-number="4.2.2" class="anchored" data-anchor-id="sec-relacoes"><span class="header-section-number">4.2.2</span> Trace relações entre os indicadores</h3>
<p>Agora, vamos analisar o slide mostrado em Figura&nbsp;3. Perceba que esse slide, novamente, lembra muito uma página de um dashboard. O slide não parece tão cativante à primeira vista, pois ele só mostra os indicadores, ele não constrói uma relação, ou <strong>uma história</strong> entre eles.</p>
<div id="fig-divisao2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/divisao2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figura&nbsp;3: Falta de relação entre os indicadores</figcaption>
</figure>
</div>
<p>Se prestarmos atenção nesses indicadores, podemos identificar alguns efeitos que estão acontecendo ao longo deles. E se refletirmos um pouco mais sobre esses efeitos, vamos perceber que esses efeitos são relacionáveis! E que em conjunto, eles podem contar uma história.</p>
<p>Por exemplo, perceba que há um aumento significativo nas vendas. Tanto no número de propostas vendidas quanto no valor total em si que essas propostas geraram. Porém, perceba que esse crescimento nas vendas não ocorreu no produto “Empréstimo Consignado”, e sim, no produto “Empréstimo com garantia de veículos”. Ou seja, o produto “Empréstimo Consignado” teve uma queda de vendas nesse mês, porém, o produto “Empréstimo com garantia de veículos” obteve um super resultado que conseguiu cobrir e muito essa queda, e no fim, conseguiu aumentar as vendas como um todo do banco.</p>
<p>Além disso, outros efeitos que podemos perceber são os aumentos na taxa de conversão e na taxa de sucesso de API. Esses também são fatores que contribuíram para o aumento nas vendas. Pois um aumento na taxa de conversão significa que uma parcela maior dos nossos clientes está adquirindo os nossos produtos. Já um aumento na taxa de sucesso na API, significa que temos menos erros nos registros das vendas na plataforma, e isso é obviamente positivo, pois nós temos uma perda de vendas menor por causa de travamentos e erros nesse sistema de registro.</p>
<p>Perceba que todas essas relações nos ajudam a <strong>construir uma história</strong> sobre como as vendas aumentaram nesse mês, e é justamente isso que queremos atingir. Portanto, tente sempre construir relações entre os seus indicadores, de modo a formar uma história sobre um resultado principal.</p>
</section>
<section id="sec-mensagem-principal" class="level3" data-number="4.2.3">
<h3 data-number="4.2.3" class="anchored" data-anchor-id="sec-mensagem-principal"><span class="header-section-number">4.2.3</span> Construa sua história em torno de uma mensagem principal</h3>
<p>Apenas para deixar claro essa ideia, ao identificar os vários efeitos que descrevemos em Seção&nbsp;4.2.2, sobre o slide mostrado em Figura&nbsp;3, é interessante nos questionarmos: qual desses vários efeitos é o principal resultado? Em outras palavras, qual desses efeitos é o que mais interessa os gerentes do banco que estão assistindo à sua apresentação?</p>
<p>Certamente o aumento sobre as vendas é o <strong>efeito principal</strong>. É o efeito que mais interessa os gerentes que estão assistindo à sua apresentação. Portanto, tente construir a sua história em torno desse resultado, ou dessa mensagem principal. Use os outros indicadores para explicar como esse resultado principal aconteceu.</p>
<p>Isso também é muito importante! Todo gerente gosta muito de ouvir a palavra “aumento nas vendas”. Porém, ele também está sempre interessado em saber o <strong>“como esse aumento foi gerado?”</strong>. Ou seja, ele precisa saber quais foram as ações realizadas que geraram esse impacto positivo.</p>
<p>Pois ao identificar essas ações, esse gerente tem a capacidade de aplicar essas ações em outras partes de seu negócio, e, com certa esperança, ele pode acabar disseminando esse efeito positivo que você descreveu para outras áreas, e, como resultado, ele pode acabar aumentando ainda mais as vendas da empresa.</p>
</section>
</section>
</section>
<section id="sec-pratica" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Colocando algumas dicas em prática</h1>
<p>Até aqui, nós discutimos as seguintes dicas:</p>
<ol type="1">
<li>Evite textos longos em seus slides;</li>
<li>Trace relações entre os indicadores;</li>
<li>Construa sua história em torno de uma mensagem principal;</li>
<li>Entregue sua história aos poucos;</li>
</ol>
<p>Vamos botar essas dicas em prática, e reformular o slide mostrado em Figura&nbsp;3. Você lembra das relações que descrevemos em Seção&nbsp;4.2.2? Lembra que essas relações traçam uma história sobre o aumento de vendas? Vamos aproveitar essa história para aplicarmos as dicas acima.</p>
<p>Primeiro, estabelecemos que nossa história deve sempre ser construída em torno de uma mensagem principal. Portanto, vamos começar a nossa apresentação nos concentrando em um único slide que mostra essa mensagem principal de forma clara.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/mensagem-principal.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">A mensagem principal da apresentação</figcaption>
</figure>
</div>
<p>Agora que sabemos qual é o assunto principal da apresentação, podemos começar a cavar mais fundo, e descrever esse assunto em mais detalhes. Como um próximo passo, podemos responder à pergunta “onde esse aumento de vendas ocorreu?”.</p>
<p>Essa pergunta pode ser bastante relevante para sua apresentação, especialmente se: 1) você está apresentando para vários gerentes de diferentes áreas ao mesmo tempo; 2) ou também, se você estiver apresentando para um gerente mais alto na hierarquia, que supervisiona várias áreas/produtos ao mesmo tempo. Pois nestes casos, esses gerentes vão logicamente se perguntar onde esse aumento de vendas ocorreu. Será que foi no produto x? Ou foi no produto y? Etc.</p>
<p>Enfim, vamos responder essa pergunta em um novo slide. Com esse slide, deixamos claro para os espectadores, que um novo produto do banco (empréstimo com garantia sobre veículos) foi a grande estrela do mês, ao gerar R$ 12 Mil em vendas logo no primeiro mês, superando inclusive o valor de vendas do produto já consolidado (empréstimo consignado).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/onde-vendemos.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Onde vendemos mais?</figcaption>
</figure>
</div>
<p>A próxima pergunta que precisamos responder é “como?”. Como esse super resultado nas vendas foi gerado? Nós discutimos isso na Seção&nbsp;4.2.3, que após descobrirem um resultado tão importante, os gerentes vão certamente estar interessados em entender como esse resultado foi gerado, para que eles possam difundir esse efeito positivo para outras áreas do negócio.</p>
<p>Lembre-se que temos dois efeitos principais discutidos em Seção&nbsp;4.2.2 que explicam como essa melhoria nas vendas ocorreu. Vamos listá-los de maneira clara e curta em um novo slide:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/porque-vendemos.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Por que vendemos mais?</figcaption>
</figure>
</div>
<p>Deixe os detalhes mais específicos dos dois efeitos acima (“qual era o problema na API, e como superamos ele?”, “como isso é uma melhoria?”, “o que é uma taxa de conversão? E como isso afeta o processo de venda?”) para a sua fala. Lembre-se, tente evitar ao máximo colocar textos longos em suas apresentações, e tente dar mais detalhes ou responder às perguntas dos seus espectadores através da fala.</p>
<p>Portanto, com esses três slides nós temos uma estrutura e um conteúdo muito mais interessantes para a nossa apresentação, pois estamos contando uma história sobre como vendemos mais em um determinado mês.</p>
<p>Perceba que a estrutura da apresentação (1: mensagem principal, 2: onde? , 3: como?) nos ajuda a criar o conteúdo e essa história de forma coesa. Nas próximas seções deste artigo, vou discutir duas outras estruturas que podem te ajudar a estruturar e a contar sua histórias de maneira coesa.</p>
</section>
<section id="sec-historias-tem-estrutura" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Histórias tem estrutura, use essas estruturas ao seu favor</h1>
<p>Nas próximas seções, vou mostrar dois exemplos de estruturas bastante comuns em histórias. Essas estruturas servem como um guia durante a construção de sua história. Elas te ajudam muito a organizar as suas ideias em um formato claro e efetivo.</p>
<section id="o-modelo-dos-quatro-cs" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="o-modelo-dos-quatro-cs"><span class="header-section-number">6.1</span> O modelo dos quatro C’s</h2>
<p>O modelo dos quatro C’s se refere a estas quatro palavras:</p>
<blockquote class="blockquote">
<p>Contexto, Conflito, Consequência, Conselho.</p>
</blockquote>
<p>Estas quatro palavras, te ajudam a trazer uma estrutura consistente para a sua história. Além disso, essas palavras também te ajudam a mexer um pouco com as emoções de seus espectadores, e, com isso, capturar mais a atenção deles.</p>
<p>Ao seguir esse modelo, sua história vai sempre se dividir em quatro partes: contexto, conflito, consequência e conselho. Precisamente nesta ordem. Esse estrutura gira em torno de um problema, ou um conflito principal que você identificou no negócio de seu cliente.</p>
<p>O interessante dessa estrutura, é que você pode estacar vários problemas em sequência. Como resultado, você tem um bloco de 4 C’s (contexto, conflito, consequência e conselho), seguido de um outro bloco com mais 4 C’s (contexto, conflito, consequência e conselho). Ou também, você pode começar a apresentação por um contexto, e, em seguida, dois blocos de 3 C’s (conflito, consequência e conselho) em sequência.</p>
<p>Enfim, chega de papo, e vamos descrever em mais detalhes cada uma das partes dessa estrutura.</p>
<section id="começe-por-um-contexto-geral" class="level3" data-number="6.1.1">
<h3 data-number="6.1.1" class="anchored" data-anchor-id="começe-por-um-contexto-geral"><span class="header-section-number">6.1.1</span> Começe por um contexto geral</h3>
<p>Portanto, ao seguir esse modelo, a sua história vai sempre se iniciar por um contexto geral. Algo apenas para contextualizar o espectador sobre qual é o estado atual do negócio.</p>
<p>Lembre-se que, o modelo dos 4 C’s é construído em torno de um conflito, ou de um problema central. Tendo isso em mente, se, por exemplo, o conflito que você for discutir na sua história, for um problema que afeta o serviço de venda de maquininhas de cartão, é importante que você foque nessa parte do contexto, em dar um <em>overview</em> sobre o produto “maquininhas de cartão”.</p>
<p>Em outras palavras, evite trazer contextos nesta parte que não estão relacionados ao problema/conflito que você vai apresentar na seção seguinte. Pois esse conflito é a parte central de sua história.</p>
</section>
<section id="apresente-um-conflitoproblemadesafio-a-ser-superado" class="level3" data-number="6.1.2">
<h3 data-number="6.1.2" class="anchored" data-anchor-id="apresente-um-conflitoproblemadesafio-a-ser-superado"><span class="header-section-number">6.1.2</span> Apresente um conflito/problema/desafio a ser superado</h3>
<p>Em seguida, você deve apresentar um conflito. Isto é, um problema, um desafio ou uma barreira que você tenha identificado no produto/serviço que você está analisando. É aqui que vamos mexer um pouco com a emoção do espectador, e usar isso ao nosso favor para capturar a sua atenção.</p>
<p>Vamos refletir um pouco sobre isso. Ao colocarmos palavras como “problema”, “cuidado”, “desafio”, “alerta”, especialmente em letras garrafais, além de incluir emojis que transmitem esse intuito, como ⚠️ e ⛔. Isso rapidamente chama a atenção de qualquer pessoa, pois te dá uma sensação de perigo, e você entra em um estado de alerta.</p>
<p>Se você refletir mais um pouco sobre isso, você provavelmente vai perceber que você tem esse mesmo instinto quando você está assistindo a um filme, ou a uma série, e o herói dessa história de repente entra em uma situação de perigo. Você rapidamente presta mais atenção no que está acontecendo, pois você quer ver como o herói vai sair dessa enrascada, ou você está torcendo muito para que ele sobreviva e supere esse problema.</p>
<p>Ao apresentarmos um problema sobre o produto/serviço que você está analisando, estamos querendo causar esse mesmo efeito em nossos espectadores. Ao dizermos que temos um desafio/problema que está afetando as vendas da empresa, os gerentes rapidamente começam a prestar mais atenção no que você está dizendo, pois eles querem saber como eles podem sair dessa enrascada!</p>
</section>
<section id="esconder-os-problemas-é-uma-péssima-ideia" class="level3" data-number="6.1.3">
<h3 data-number="6.1.3" class="anchored" data-anchor-id="esconder-os-problemas-é-uma-péssima-ideia"><span class="header-section-number">6.1.3</span> Esconder os problemas é uma péssima ideia</h3>
<p>Isso é muito importante! Alguns analistas tem medo ou receio de jogar luz sobre os problemas existentes, e, por isso, acabam escodendo eles ou omitindo de suas apresentações. Porém, você não está entregando valor nenhum para o seu cliente dessa forma! Você não está ajudando o seu cliente a resolver os problemas e a crescer o negócio dele!</p>
<p>E se os problemas não são solucionados, se eles continuam existindo, eles vão crescer, e crescer, até que eles explodirem, gerando assim um caos generalizado. Em vista disso, quanto mais cedo você identificar esse problema, avisar os gerentes sobre ele, e apresentar possíveis soluções para ele, melhor para os gerentes, que já saem com um plano de ação para resolver esse problema, e é melhor para você também, pois estamos entregando valor e soluções para o cliente.</p>
<p>Portanto, uma boa apresentação, ou um bom relatório de dados, é aquele que entrega valor para o seu cliente! Ao mostrar novas oportunidades de negócio (e.g.&nbsp;atingir uma nova parcela do público com um produto), e também, apresentar soluções para problemas atuais que estão limitando ou impedindo o crescimento do negócio.</p>
<p>Porém, uma apresentação que apenas comenta pontos positivos, que fala que está tudo bem… não traz valor nenhum para os gerentes. Os gerentes não te contrataram para falar que está tudo bem. Eles te contrataram para que você ajude eles a descobrir e solucionar problemas no negócio deles, através da análise de dados.</p>
</section>
<section id="apresente-as-consequências-do-conflitoproblemadesafio-que-você-identificou" class="level3" data-number="6.1.4">
<h3 data-number="6.1.4" class="anchored" data-anchor-id="apresente-as-consequências-do-conflitoproblemadesafio-que-você-identificou"><span class="header-section-number">6.1.4</span> Apresente as consequências do conflito/problema/desafio que você identificou</h3>
<p>Portanto, após apresentar um conflito/problema/desafio que está afetando o negócio para o seu espectador, é importante que você apresente logo em seguida a consequência desse problema. Isso ajuda os gerentes a terem uma dimensão do tamanho que esse problema representa para o negócio deles.</p>
<p>Tudo bem se você não conseguir mensurar em números o tamanho do impacto que esse conflito gerou no negócio. Tente medir esse impacto da melhor forma que você puder. Um valor aproximado do impacto já pode trazer bastante clareza sobre o tamanho do perigo que esse conflito representa para o negócio de seus espectadores.</p>
<p>Você também pode fornecer um <em>range</em>, ou um intervalo possível do impacto se você puder (e.g.&nbsp;o impacto estimado está entre R$ 20 mil e R$ 340 mil). Essa também é uma forma válida de expor o tamanho do problema.</p>
<p>Caso for realmente impossível de mensurar esse impacto em números, então, explique nesta parte, quais são os pontos do processo de venda do produto/serviço que são afetados por esse problema. Em outras palavras, apresente quais são os lugares do negócio que estão sendo, em teoria, afetados por esse conflito.</p>
</section>
<section id="aconselhe-o-seu-cliente-apresente-possíveis-soluções-para-o-problema" class="level3" data-number="6.1.5">
<h3 data-number="6.1.5" class="anchored" data-anchor-id="aconselhe-o-seu-cliente-apresente-possíveis-soluções-para-o-problema"><span class="header-section-number">6.1.5</span> Aconselhe o seu cliente, apresente possíveis soluções para o problema</h3>
<p>Ok, apresentamos um problema, ou um conflito para os nossos espectadores. Também discutimos os impactos desse conflito sobre o negócio de nosso cliente. Agora, precisamos apresentar possíveis soluções para esse problema.</p>
<p>Portanto, entenda o problema/conflito que você está apresentando, e tente listar quais seriam as principais soluções para esse problema, e inclua essas soluções nesta parte de sua apresentação. Vale a pena explicar e discutir esse problema com outros colegas de trabalho também, pois eles também podem sugerir soluções interessantes que estavam fora de seu radar.</p>
<p>É interessante também incluir uma relação dos <em>trade-offs</em> de cada solução, principalmente em questão de complexidade e esforço de cada solução. Gerentes estão constantemente interessados nessa relação, e querem sempre escolher a solução que seja mais simples e menos complexa de ser implementada.</p>
</section>
</section>
<section id="evolução-do-personagem-como-uma-outra-alternativa" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="evolução-do-personagem-como-uma-outra-alternativa"><span class="header-section-number">6.2</span> Evolução do personagem como uma outra alternativa</h2>
<p>A evolução do personagem (ou a “jornada do herói”) é uma estrutura de história bem popular. Você começa por um personagem, ou, um herói para a história, que no nosso caso aqui, pode ser o negócio do nosso cliente, ou um produto específico dele.</p>
<p>Nossa missão é mostrar como esse personagem/herói evoluiu nos últimos meses. Por isso, essa estrutura de evolução é bastante apropriada para relatórios no final do ano. Pois esses relatórios são interessantes para mostrarmos a evolução do negócio (ou a evolução do personagem) no último ano.</p>
<section id="o-início-e-o-fim-da-jornada" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="o-início-e-o-fim-da-jornada"><span class="header-section-number">6.2.1</span> O início e o fim da jornada</h3>
<p>Se você preferir, você pode começar a sua apresentação apresentando como o seu personagem estava no início da jornada, e, terminar essa apresentação mostrando como esse personagem terminou essa jornada.</p>
<p>Essa é uma opção, porém, eu prefiro começar a apresentação mostrando o início e o fim ao mesmo tempo. Desse modo, os espectadores já começam a apresentação tendo uma noção do quanto o negócio evoluiu durante o ano. Portanto, eu começo apresentando como o personagem (ou o negócio/produto) começou o ano, e, logo em seguida, como ele terminou o ano.</p>
</section>
<section id="apresentando-os-desafios-e-percalços" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="apresentando-os-desafios-e-percalços"><span class="header-section-number">6.2.2</span> Apresentando os desafios e percalços</h3>
<p>Em todo negócio/produto, qualquer que ele seja, nós sempre enfrentamos grandes desafios que podem ameaçar o sucesso, ou, limitar a evolução deste negócio/produto.</p>
<p>Portanto, ao longo de qualquer jornada, nós sempre enfrentamos desafios e percalços, e aplicamos ações para tentar superar esses desafios. Ao superar esses desafios, nós podemos com certa esperança gerar a evolução e melhoria desse negócio/produto. Isto é, chegar ao final dessa jornada com um negócio/produto melhor, mais robusto e mais rentável.</p>
<p>Tudo isso significa que o “como percorremos o meio da jornada” pode ser muito mais importante/interessante que o início ou o final dessa jornada. Sendo assim, reserve uma parte de sua apresentação para apresentar os principais desafios que enfrentamos durante essa travessia, e como superamos eles.</p>
</section>
<section id="se-possível-aproveite-para-valorizar-o-trabalho-de-sua-equipe" class="level3" data-number="6.2.3">
<h3 data-number="6.2.3" class="anchored" data-anchor-id="se-possível-aproveite-para-valorizar-o-trabalho-de-sua-equipe"><span class="header-section-number">6.2.3</span> Se possível, aproveite para valorizar o trabalho de sua equipe</h3>
<p>Nesse ponto específico da apresentação, você geralmente tem uma oportunidade muito interessante! Pois você pode, entregar valor ao seu cliente, e, ao mesmo tempo, também valorizar o trabalho de sua equipe, especialmente se foi essa a equipe que descobriu os desafios, e, aplicou as ações que superaram esses desafios que você está descrevendo.</p>
<p>Isso é uma oportunidade de ouro! Portanto, se você tiver essa oportunidade em suas mãos, aproveite ela! Lembre-se que você não trabalha sozinho. Você quase sempre está trabalhando dentro de uma equipe de pessoas, e é sempre importante saber como valorizar o trabalho de seus colegas.</p>
<p>Contudo, essa oportunidade nem sempre vai aparecer para você. Talvez os desafios que você está apresentando, foram superados de outra forma, por uma outra equipe que você não conhece, ou que não possui conexão direta.</p>
</section>
<section id="reforce-os-resultados-alcançados" class="level3" data-number="6.2.4">
<h3 data-number="6.2.4" class="anchored" data-anchor-id="reforce-os-resultados-alcançados"><span class="header-section-number">6.2.4</span> Reforce os resultados alcançados</h3>
<p>Também é útil terminar a sua apresentação, mostrando um resumo dos resultados alcançados ao longo do ano. Isto pode ser um <em>bulletpoint</em> simples, resumindo os principais resultados. Isso ajuda a refrescar a memória de seus espectadores, mostrando a eles não apenas sobre como terminamos a jornada do ano passado, mas também, sobre como nós começamos a jornada do próximo ano 😉.</p>
</section>
<section id="um-resumo-da-estrutura" class="level3" data-number="6.2.5">
<h3 data-number="6.2.5" class="anchored" data-anchor-id="um-resumo-da-estrutura"><span class="header-section-number">6.2.5</span> Um resumo da estrutura</h3>
<p>Portanto, nas seções anteriores discutimos uma ideia de estrutura que seria similar à uma “evolução do personagem”. No final, temos uma história que segue a seguinte sequência:</p>
<ul>
<li>apresente rapidamente como começamos e como terminamos a jornada;</li>
<li>apresente os principais desafios que enfrentamos durante o ano;</li>
<li>quais foram as soluções que aplicamos para solucionar os problemas;</li>
<li>reforce a evolução do personagem, ao mostrar novamente os resultados atingidos com as soluções acima;</li>
</ul>


</section>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Vale relembrar que os números e gráficos apresentados nessa imagem são meramente ilustrativos, e, foram definidos de forma completamente aleatória.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Storytelling</category>
  <category>Data Storytelling</category>
  <category>Data Science</category>
  <guid>https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/pt/index.html</guid>
  <pubDate>Mon, 06 Mar 2023 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2023/2023-03-06-storytelling/mapa-featured.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Introducing the {ggfunnel} R package</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/en/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>At my work, I use a lot of funnel charts. Because they are a very effective visualization to see losses trough a sequence of steps in a sales process (or a “sales path”). I usually build these funnel charts in a very popular Microsoft tool called Power BI.</p>
<p>This tool is very popular to build interactive dashboards, and it offers many different native visuals and type of charts to build your visualizations. One visual in particular, is the native funnel chart visual which you can use to visualize your data in a funnel chart, like in the example below:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/power-bi.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">A funnel chart at Power BI</figcaption><p></p>
</figure>
</div>
<p>But after working a lot with these charts in Power BI, I tought to myself: “could I make a funnel chart in R?”. The answer is obviously yes! You could definitely drawn a funnel chart with frameworks such as the <code>ggplot2</code> package. However, there was no packages in the community that could build such visualization out of the box.</p>
<p>So I decided to develop a small and experimental R package that could drawn this type of chart. This is how <code>{ggfunnel}</code> was born. In essence, with <code>{ggfunnel}</code>, you can build Power BI like funnel charts in R. The <code>{ggfunnel}</code> package uses the <code>{ggplot2}</code> package (or, more specifically, the <code>ggplot2::geom_tile()</code> geom) to build the funnel chart.</p>
<p><a href="https://github.com/pedropark99/ggfunnel"> <button type="button" class="btn btn-primary">Official repository</button></a> <a href="https://pedropark99.github.io/ggfunnel/"> <button type="button" class="btn btn-primary">Package website</button></a></p>
</section>
<section id="how-to-get-it" class="level1">
<h1>How to get it ?</h1>
<p>For now, <code>{ggfunnel}</code> is available only at GitHub. You can download and install the package with the <code>devtools::install_github()</code> function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pedropark99/ggfunnel"</span>)</span></code></pre></div>
</div>
</section>
<section id="a-small-example-of-use" class="level1">
<h1>A small example of use</h1>
<p>The main functionality of the package is at a function called <code>ggfunnel::funnel()</code>, which is responsible for producing the plot. You usually define 3 arguments in this function, which are:</p>
<ul>
<li><code>data</code>: the data.frame with the data you want to use in the plot;</li>
<li><code>values</code>: the column name where are the values you want to display in your funnel chart. In other words, the numerical data that you want to visualize in the chart;</li>
<li><code>levels</code>: the column name with the “levels” (or the “groups”) you want to display in your funnel chart. In other words, the categorical data that identifies each level in the funnel;</li>
</ul>
<p>In the example below, we are using the <code>ggfunnel::aggregates</code> data.frame to build a basic funnel chart:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggfunnel)</span>
<span id="cb2-2">ggfunnel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>aggregates</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Step N_users
1    A    4389
2    B    3100
3    C    2005
4    D     500
5    E     120</code></pre>
</div>
</div>
<p>The <code>N_users</code> column is the column with numerical data, so I give it to the <code>values</code> argument of the function. This way, these values will be used to determine the widths of each rectangle in the funnel chart.</p>
<p>In contrast, the <code>Step</code> column contains the categorical data of the dataset. That is why I gave this column to the <code>levels</code> argument of the function. As a result, the values of this column will be used to determine the “levels” of the funnel chart.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggfunnel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">funnel</span>(</span>
<span id="cb4-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ggfunnel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>aggregates,</span>
<span id="cb4-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> N_users, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> Step</span>
<span id="cb4-4">  )</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(plot)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/en/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The above plot is very simple. However, since the output of <code>ggfunnel::funnel()</code> is a native <code>ggplot</code> object, you can customize and extend the plot greatly with the <code>{ggplot2}</code> package. I give examples and details on how you can customize this output at the main vignette (<code>vignette("funnel")</code>) of the package, which you can <a href="https://pedropark99.github.io/ggfunnel/articles/funnel.html">read at the website of the package</a>.</p>
<p>Just as a small demonstration, I can add titles to the plot, adjust the theme, and add some notes and arrows to emphasize some parts of the plot. I can also use other packages which extends <code>{ggplot2}</code> to add more custom outputs to the plot, such as the <code>{ggtext}</code> package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ggfunnel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>aggregates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-2">  ggfunnel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">funnel</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> N_users, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> Step,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text_specs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-5">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nudge_x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>),</span>
<span id="cb5-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb5-7">    )</span>
<span id="cb5-8">  )</span>
<span id="cb5-9"></span>
<span id="cb5-10">note <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We lost **75% of the users**&lt;br&gt;from step </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">C</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> to step </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">D</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb5-11"></span>
<span id="cb5-12">plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-13">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Funnel of users in each step of the sales path"</span>,</span>
<span id="cb5-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subtitle =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The biggest loss of users is at the </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">D</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> step"</span>,</span>
<span id="cb5-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb5-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-18">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb5-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>),</span>
<span id="cb5-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span></span>
<span id="cb5-21">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-22">  ggtext<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_richtext</span>(</span>
<span id="cb5-23">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>,</span>
<span id="cb5-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> note),</span>
<span id="cb5-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label.color =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb5-26">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-27">  ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(</span>
<span id="cb5-28">    ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.17</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.07</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>), </span>
<span id="cb5-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(</span>
<span id="cb5-30">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> ggplot2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>)</span>
<span id="cb5-31">    )</span>
<span id="cb5-32">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/en/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="a-simple-but-far-from-perfect-approach" class="level1">
<h1>A simple (but far from perfect) approach</h1>
<p><code>{ggfunnel}</code> is a very simple (and kind of experimental) package, and it is far from perfect. This means that, currently, <code>{ggfunnel}</code> gives you the minimal code necessary to produce a decent funnel chart. But it does give much more functionality than that.</p>
<p>It also makes some assumptions about your data that might not hold, and it does not contain some features that you might find at Power BI (e.g.&nbsp;percentage labels).</p>
<p>But, even being a very simple package, <code>ggfunnel::funnel()</code> always returns the raw <code>ggplot</code> object that describes the funnel chart. This means that the package gives you a lot of freedom to customize (or to complement) the output in the way you might need. See <a href="https://pedropark99.github.io/ggfunnel/articles/funnel.html"><code>vignette("funnel")</code></a> for more details on how to customize/complement the <code>ggfunnel::funnel()</code> output.</p>
<p>However, the package needs some work to be a more robust and complete piece of code, for sure. If you think you can make <code>{ggfunnel}</code> better I would be happy to review a PR from you!</p>


</section>

 ]]></description>
  <category>R Language</category>
  <category>Package</category>
  <category>Power BI</category>
  <category>Funnel charts</category>
  <guid>https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/en/index.html</guid>
  <pubDate>Sat, 11 Feb 2023 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2023/2023-02-11-funnel-pkg-v010/background-ggfunnel.png" medium="image" type="image/png" height="84" width="144"/>
</item>
<item>
  <title>What I learned from developing my first Python package</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2023/2023-02-06-python-pckg/en/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>In 2022, I developed my first Python package called <a href="https://github.com/pedropark99/spark_map"><code>spark_map</code></a>, and published it at PyPI. If you want to know more about this package 😉, you can check <a href="https://pedro-faria.netlify.app/posts/2022/2022-12-21-spark-map-v0.2.3/en/">a previous post here</a>, where I introduced the package, and described it’s main features, and showed a small use case.</p>
<p>Now, although <code>spark_map</code> is a small Python package, I had a hard time developing it. More specifically, the Python code was not hard at all to develop. But packaging it into a proper package 📦 was hard. In this post, I want to share a few things that I learned about Python package development in this process.</p>
</section>
<section id="before-i-say-anything-some-references" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Before I say anything, some references</h1>
<p>The development of this package involved reading several articles 📓, and doing some practical tests 🧪. Here I share some of the best resources I discovered along the way.</p>
<p>First, a great article to start your project is the <a href="https://packaging.python.org/en/latest/tutorials/packaging-projects/">Packaging Python Projects</a> tutorial. This tutorial is written by PyPA, or, the <a href="https://www.pypa.io/en/latest/">Python Packaging Authority</a> team<sup>1</sup>, and it seems to be “The Place” to search for best practices on Python package projects.</p>
<p>The PyPA team also have a very detailed documentation about <a href="https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/">Packaging and distributing projects</a> with <code>setuptools</code>. This is a more technical, detailed documentation, but, it can be a great resource too.</p>
<p>Another very useful article to learn about the structure of a Python package, and the import process of Python, is the article entitled <a href="https://dev.to/codemouse92/dead-simple-python-project-structure-and-imports-38c6">Dead Simple Python: Project Structure and Imports</a> from Jason C. McDonald.</p>
</section>
<section id="now-lets-dive-in" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Now, let’s dive in</h1>
<section id="the-search-path-of-python" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="the-search-path-of-python"><span class="header-section-number">3.1</span> The search path of Python</h2>
<p>We usually import a package in Python, by including a <code>import</code> statement at the beginning of our script. For example, to import the <code>pandas</code> package to my Python session, I could do this:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas</span></code></pre></div>
</div>
<p>When you import a package in Python, the Python interpreter starts a search process 🔍 through your computer, to find the specific package you called in your script. Every Python package you use must be installed in your machine. Otherwise, Python will never find it, and, as a consequence, you can not use it.</p>
<p>The Python interpreter will always look for the packages you import, inside a set of pre-defined locations of your computer. This pre-defined list is stored inside the <code>sys.path</code> variable <span class="citation" data-cites="pymodule">(Foundation 2023c)</span>. In other words, when you import a package, Python looks for this package inside each one of the directories listed at <code>sys.path</code> variable.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sys.path)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['/home/pedro/Documentos/Projetos/Personal-website/posts/2023/2023-02-06-python-pckg/en', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '', '/home/pedro/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']</code></pre>
</div>
</div>
<p>You might also find contents about the <code>PYTHONPATH</code> variable when searching for this subject on the internet. In essence, <code>PYTHONPATH</code> is a environment variable that can contain a complementary list of directories to be added to <code>sys.path</code> <span class="citation" data-cites="pypathvar">(Foundation 2023a)</span>.</p>
<p>As you can imagine, the Python interpreter look into these directories in a sequential manner. That is, Python looks for the package at the first folder. If it does not find the package you called, then, it looks at the second folder. If it does not find the package again, it looks at the third folder. And goes on and on, until it hits the last folder of the list.</p>
<p>If does not find the package you called at this last folder, Python will automatically raise a <code>ModuleNotFoundError</code> error. As you expect, this error means that Python could not find the package you called at any of the directories listed at <code>sys.path</code>.</p>
</section>
<section id="do-not-change-the-sys.path-or-pythonpath-variable" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="do-not-change-the-sys.path-or-pythonpath-variable"><span class="header-section-number">3.2</span> Do not change the <code>sys.path</code> or <code>PYTHONPATH</code> variable ⚠️</h2>
<p>The <code>sys.path</code> variable is a standard Python list, and, as any other list, can be altered to include other directories that are not currently there. The same goes for the <code>PYTHONPATH</code> variable, which is an environment variable, and can be altered too.</p>
<p>As an example, when you try to import your package, which is stored at folder <code>A</code>, and, you face a <code>ModuleNotFoundError</code> error, you might be tempted to alter <code>PYTHONPATH</code> or <code>sys.path</code>, to add the folder <code>A</code> to this search path of Python. DO NOT DO IT! YOU SHOULD NEVER alter <code>PYTHONPATH</code> or <code>sys.path</code> ⚠️ ! I mean, at least not inside a Python package.</p>
<p>In other words, if at some point inside the source code of your Python package, you execute a code like this:</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb4-2">sys.path.append(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./../weird-unknow-folder'</span>)</span></code></pre></div>
</div>
<p>just erase this code! Python packages are made to be used by other peoples, and with a code like this above, you will change the search path of this user. Changing the search path of a user is a bad idea. Because you can accidentaly produce bad and confusing side effects to the user’s session, which can be hard to debug and solve.</p>
<p>Besides, in the majority of times when you alter the <code>sys.path</code>, you are trying to overcome a bad structure of your files. In other words, you can always avoid altering the <code>sys.path</code> variable by changing the structure of your source files inside your project.</p>
<p>Just to be clear, is a bad idea to alter the <code>sys.path</code> inside the source code of your package. However, it is ok to alter these variables outside of your package.</p>
<p>As a practical example, Apache Spark is written in Scala. But it have a Python API available through the <code>pyspark</code> package. If you look closely into the source code of the project, or, more specifically at the <a href="https://github.com/apache/spark/blob/master/python/run-tests.py"><code>run-tests.py</code></a> file, you can see that new paths (or new directories) are appended to <code>sys.path</code> in this file.</p>
<p>However, this <code>run-tests.py</code> file IS NOT A PART of the <code>pyspark</code> package itself. It is just an auxiliary script (outside of the package) used to support the testing processes of <code>pyspark</code>. This means that <code>run-tests.py</code> contains code that is not intended to be executed by the users of the package, but by the developers of <code>pyspark</code> instead.</p>
</section>
<section id="differences-between-a-package-and-a-module" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="differences-between-a-package-and-a-module"><span class="header-section-number">3.3</span> Differences between a package and a module</h2>
<p>This is a very basic knowledge for a Python developer. However, until recently, I did not know the meaning of these two concepts. So, I will give it to you now, in case you do not have it yet.</p>
<p>A Python module is a single Python file (i.e.&nbsp;a file with extension <code>.py</code>). Every Python script you write, is a Python module. In contrast, a Python package is a set of Python modules gathered together inside a folder. This folder must contain a particular Python module named as <code>__init__.py</code>. This <code>__init__.py</code> is the file that “initialize”, or, “identifies” this folder as a Python package <span class="citation" data-cites="pypackages">(Foundation 2023b)</span>.</p>
<p>You can have multiple Python packages inside a Python package. That is, inside the directory of your package, you can have multiple sub-directories with more Python modules and <code>__init__.py</code> files. In this case, these sub-directories become submodules of the package. You can interpret them as sub-packages, if you prefer.</p>
</section>
<section id="structuring-the-package-was-one-of-the-hardest-parts" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="structuring-the-package-was-one-of-the-hardest-parts"><span class="header-section-number">3.4</span> Structuring the package was one of the hardest parts</h2>
<p>Every Python package follows the same basic file/directory structure 🏛️. In other words, the files that compose a Python package are always structured in a standard way. But, understanding and using this structure effectively was one of the hardest parts for me. At this section, I want to explain this structure for you.</p>
<p>In a Python package project, you usually have these <strong>files</strong>:</p>
<ul>
<li><p><code>LICENSE.md</code> or <code>LICENSE.rst</code> (or both): a text file with the license of your package. It can be a Markdown file (<code>.md</code>), or, a reStructuredText markup file (<code>.rst</code>);</p></li>
<li><p><code>README.md</code>: a Markdown file introducing your package. That is, a file that describes succintly the objective of the package, its main features, and showing a small example of use of the package;</p></li>
<li><p><code>setup.py</code> or <code>pyproject.toml</code> or <code>setup.cfg</code>: these are files used by the build system you choose to build (or compile) your Python package into a compact and shareable format;</p></li>
</ul>
<p>Also, a Python package project usually contains these <strong>folders (or directories)</strong>:</p>
<ul>
<li><code>src/&lt;package-name&gt;/</code> or <code>&lt;package-name&gt;/</code>: inside this directory you store all Python modules of your package, that is, the source code of your package;</li>
<li><code>tests/</code>: inside this directory you store all unit tests of your package. In other words, the scripts and automated workflow used to test your package.</li>
</ul>
<!--
- `doc/` or `docs/`: inside this directory you store all documentation files. That is, files that document your package, describe its contents, functionality and concepts;
-->
<p>You must store the source code (or the python modules) of your package inside a folder with the same name as the package itself (i.e.&nbsp;the <code>&lt;package-name&gt;/</code> folder). So, for a package named <code>spark_map</code> we should keep the source files (i.e.&nbsp;the <code>.py</code> files) of this package inside a folder called <code>spark_map</code>. As a practical example, if you <a href="https://github.com/pandas-dev/pandas/tree/main/pandas">look at the source code</a> of the famous <code>pandas</code> package, you will see that all source code of the package is stored inside a folder called <code>pandas</code>.</p>
<p>In contrast, this <code>&lt;package-name&gt;/</code> folder might be (or might be not) inside another folder called <code>src/</code>, that is, the path to the source code might be <code>src/&lt;package-name&gt;/</code> instead of <code>&lt;package-name&gt;/</code>. The <code>pandas</code> package for example, do not uses the <code>src/</code> folder, so the source code is stored inside the <code>pandas/</code> folder. In contrast, the famous <code>flask</code> package uses the <code>flask/</code> folder inside a <code>src/</code> folder, so the path to the source code becomes <code>src/flask</code>. <a href="https://github.com/pallets/flask/tree/main/src/flask">You can check this by looking at the source code of the package.</a>.</p>
<p>So the folder structure to store the source code of the package might change very slightly from package to package. There is no consensus about which one of these two structures is the best. But in general, the source is always stored inside a folder with the same name as the package (i.e.&nbsp;the <code>&lt;package-name&gt;/</code> folder). And this folder might be stored inside a <code>src/</code> folder.</p>
<p>Furthermore, every project of a Python package usually have one, two, or more files that <strong>control the build process of the package</strong> (like <code>setup.py</code>, <code>pyproject.toml</code> or <code>setup.cfg</code>). In other words, these files are not part of the package itself. But they are used by the <strong>build system</strong> to build (or compile) your package into a compact and shareable format. I talk more about these files at Section&nbsp;3.5.</p>
<p>Having in mind all these files that we described until here, we can build a example of file structure for a package. For example, a possible file strucuture for a package named <code>haven</code> could be:</p>
<pre><code>.
├── LICENSE.md
├── LICENSE.rst
├── README.md
├── pyproject.toml
├── src
│   └── haven
│       ├── __init__.py
│       ├── functions.py
│       ├── utils.py 
│       └── haven.py
│
└── tests
    ├── test_functions.py
    └── test_haven.py</code></pre>
</section>
<section id="sec-build-systems" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="sec-build-systems"><span class="header-section-number">3.5</span> Introducing build systems</h2>
<p>When you are developing a package, you write multiple Python modules that perform all necessary tasks to solve the specific problem you want to solve with your package. However, in order to distribute this package to other peoples, that is, to make it available to the wide public, you need to compile (or build) your package into a compact and shareable format.</p>
<p>This is what a build system does. It compiles all archives of your package into a single and compact file that you can publish at PyPI, and distribute to other peoples. This means that, when a user downloads your package (through <code>pip</code> for example), it downloads this compact and shareable version of your package.</p>
<p>On the day of writing this article, there are four main build systems available on the market for Python packages, which are <code>hatchling</code>, <code>setuptools</code>, <code>flit</code> and <code>PDM</code>. No matter which one you use, just choose one, anyone. Because they do the same thing, and work in a very similar way.</p>
<p>Most of them use various metadata stored at the <code>pyproject.toml</code> file to build your project. The <code>setuptools</code> build system is probably a exception to this rule, because this build system supports other kinds of files to store this metadata, which are <code>setup.py</code> and <code>setup.cfg</code>.</p>
<section id="the-pyproject.toml-file-as-the-commom-ground" class="level3" data-number="3.5.1">
<h3 data-number="3.5.1" class="anchored" data-anchor-id="the-pyproject.toml-file-as-the-commom-ground"><span class="header-section-number">3.5.1</span> The <code>pyproject.toml</code> file as the commom ground</h3>
<p>The <a href="https://peps.python.org/pep-0517/">PEP517</a> and <a href="https://peps.python.org/pep-0518/">PEP518</a> were lauched to stablish the <code>pyproject.toml</code> file as the commom ground to every build system. Basically, the <code>pyproject.toml</code> is a file included at the root level of your project, and contains metadata about your package (e.g.&nbsp;it’s name, version, license, description, author, dependencies, etc.).</p>
<p>It represents a “commom ground” because all build systems available can read and use this file to build (or compile) your package. As a consequence, with this file, you can change very easily the build system you use in your package, without having to change various configurantions and files. All you have to do is to change the options under the <code>build-system</code> table.</p>
<p>This <code>build-system</code> table is the part of <code>pyproject.toml</code> file where you can specify options and configurations for the build system. As an example, to use the <code>setuptools</code> build system, you would add these lines to <code>pyproject.toml</code>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-system</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">requires</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setuptools"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-backend</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setuptools.build_meta"</span></span></code></pre></div>
<p>In the other hand, if you want to use the <code>hatchling</code> build system instead, you would change the above lines to:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-system</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">requires</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hatchling"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-backend</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hatchling.build"</span></span></code></pre></div>
<p>Or, maybe you prefer <code>flit</code>:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-system</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb8-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">requires</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flit_core"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb8-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">build-backend</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flit_core.buildapi"</span></span></code></pre></div>
<p>Anyway, you get it. You use the options <code>requires</code> and <code>build-backend</code> under the <code>build-system</code> table to specificy which system you want to use in the building process of your package. All of these different systems will use <code>pyproject.toml</code> to collect other very important metadata about your package, like these metadata below:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spark_map"</span></span>
<span id="cb9-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">version</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.2.77"</span></span>
<span id="cb9-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">authors</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb9-5">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{ </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pedro Faria"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">, </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">email</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pedropark99@gmail.com"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> }</span></span>
<span id="cb9-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">description</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pyspark implementation of `map()` function for spark DataFrames"</span></span>
<span id="cb9-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">readme</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"README.md"</span></span>
<span id="cb9-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">requires-python</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt;=3.7"</span></span>
<span id="cb9-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">license</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{ </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LICENSE.txt"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> }</span></span>
<span id="cb9-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">classifiers</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb9-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Programming Language :: Python :: 3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb9-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"License :: OSI Approved :: MIT License"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb9-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Operating System :: OS Independent"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb9-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">dependencies</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb9-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pyspark"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb9-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setuptools"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb9-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"toml"</span></span>
<span id="cb9-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
</section>
<section id="the-setuptools-build-system" class="level3" data-number="3.5.2">
<h3 data-number="3.5.2" class="anchored" data-anchor-id="the-setuptools-build-system"><span class="header-section-number">3.5.2</span> The <code>setuptools</code> build system</h3>
<p>The <code>setuptools</code> build system is the system that I use to build <code>spark_map</code>. It is kind of a more “versatile”<sup>2</sup> system than the others, only because it supports other kinds of files besides <code>pyproject.toml</code>.</p>
<p>The <code>setup.py</code> file is probably the most “famous” file, or, the most associable to <code>setuptools</code>. Although this is changing in recent years (more about this at the next section), the <code>setup.py</code> is still considered the traditional way of using the system, as the documentation itself says:</p>
<blockquote class="blockquote">
<p>The traditional <code>setuptools</code> way of packaging Python modules uses a <code>setup()</code> function within the <code>setup.py</code> script. <span class="citation" data-cites="setuptools">(Authority 2023)</span></p>
</blockquote>
<p>In summary, you can replace <code>pyproject.toml</code> with the <code>setup.py</code> file. Just as an example, I could replace the <code>pyproject.toml</code> file for <code>spark_map</code> with a <code>setup.py</code> file similar to the file below. The whole <code>setup.py</code> file is usually composed of just a single call to the <code>setuptools.setup()</code> function, and nothing more. All of the various metadata about the package stored at <code>pyproject.toml</code> are translated to named arguments to this <code>setup()</code> function.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup.py placed at root directory</span></span>
<span id="cb10-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> setuptools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> setup</span>
<span id="cb10-3">setup(</span>
<span id="cb10-4">    name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'spark_map'</span></span>
<span id="cb10-5">    version <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0.2.77'</span>,</span>
<span id="cb10-6">    author <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pedro Faria'</span>,</span>
<span id="cb10-7">    description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Pyspark implementation of `map()` function for spark DataFrames'</span>,</span>
<span id="cb10-8">    long_description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'README.md'</span>,</span>
<span id="cb10-9">    license <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> { <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LICENSE.txt"</span> }</span>
<span id="cb10-10">    classifiers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb10-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Programming Language :: Python :: 3"</span>,</span>
<span id="cb10-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"License :: OSI Approved :: MIT License"</span>,</span>
<span id="cb10-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Operating System :: OS Independent"</span>,</span>
<span id="cb10-14">    ],</span>
<span id="cb10-15">    python_requires <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;=3.7'</span>,</span>
<span id="cb10-16">    install_requires <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pyspark'</span>],</span>
<span id="cb10-17">    extras_require <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'setuptools'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'toml'</span>]</span>
<span id="cb10-18">)</span></code></pre></div>
</div>
<p>However, if you use a <code>setup.py</code> file you become kind of locked into the <code>setuptools</code> framework. This one the reasons why many developers prefer to use the <code>pyproject.toml</code> file instead. Because it becomes so much more easy to change between build systems if you want to.</p>
<p>Another “clash point” about the <code>setup.py</code> file is that it changes the way, or the steps (or the worflow) to build the package. The standard or the most supported strategy to build a package, is to use the <code>build</code> module command of Python at the terminal. This command will build your package, no matter which build system you use:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you are on Windows:</span></span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> build</span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you are on Linux:</span></span>
<span id="cb11-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> build</span></code></pre></div>
<p>In contrast, when you use the <code>setup.py</code> file, you have to execute directly the script with some additional options, like <code>sdist</code>:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you are on Windows:</span></span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">py</span> setup.py sdist</span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If you are on Linux:</span></span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> setup.py sdist</span></code></pre></div>
<p>Again, this is bad, because it forces you into a certain framework, or, a certain workflow that is different than the standard way of building a package.</p>
</section>
<section id="avoid-setup.py-and-use-pyproject.toml-instead" class="level3" data-number="3.5.3">
<h3 data-number="3.5.3" class="anchored" data-anchor-id="avoid-setup.py-and-use-pyproject.toml-instead"><span class="header-section-number">3.5.3</span> Avoid <code>setup.py</code> and use <code>pyproject.toml</code> instead</h3>
<p>The Python community understood this problem, and now, executing the <code>setup.py</code> script directly is heavily discouraged <span class="citation" data-cites="ganssle">(Ganssle 2021)</span>. Actually, the <code>setuptools</code> project itself started a movement to migrate it’s functionality to <code>pyproject.toml</code> and <code>setup.cfg</code> files.</p>
<p>This concern is clearly documented at <a href="https://setuptools.pypa.io/en/latest/userguide/quickstart.html#basic-use">the “Quick Start” section</a> of the official documentation for the project:</p>
<blockquote class="blockquote">
<p>Setuptools offers first class support for <code>setup.py</code> files as a configuration mechanism … It is important to remember, however, that running this file as a script (e.g.&nbsp;<code>python setup.py sdist</code>) is strongly discouraged, and that the majority of the command line interfaces <strong>are (or will be) deprecated</strong> (e.g.&nbsp;<code>python setup.py install</code>, <code>python setup.py bdist_wininst</code>, …) … We also recommend users to expose as much as possible configuration in a more declarative way via the <code>pyproject.toml</code> or <code>setup.cfg</code>, and keep the <code>setup.py</code> minimal with only the dynamic parts (<strong>or even omit it completely if applicable</strong>).</p>
</blockquote>
<p>In resume, avoid using <code>setup.py</code> in your project, and use <code>pyproject.toml</code> instead with the <code>python -m build</code> command. This a much more recommended workflow for building your package.</p>
</section>
</section>
</section>
<section id="conclusion" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Conclusion</h1>
<p>In this article, I intended to share what I learned trough my journey of building my first Python package. In summary, the main subjects discussed here were:</p>
<ul>
<li><p>Do not change the <code>sys.path</code> or <code>PYTHONPATH</code> variable inside your package ⚠️;</p></li>
<li><p>Differences between a package and a module;</p></li>
<li><p>Nailing the structure 🏛️ of your package can be one the hardest parts;</p></li>
<li><p>If you use <code>setuptools</code> to build your package, avoid <code>setup.py</code> and use <code>pyproject.toml</code> instead;</p></li>
</ul>
<p>I hope this content help you to develop your projects. See you later 😉 !</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-setuptools" class="csl-entry">
Authority, Python Packaging. 2023. <span>“Setuptools Documentation.”</span> <a href="https://setuptools.pypa.io/en/latest/index.html">https://setuptools.pypa.io/en/latest/index.html</a>.
</div>
<div id="ref-pypathvar" class="csl-entry">
Foundation, Python Software. 2023a. <span>“Environment Variables.”</span> <em>Python 3.11.1 Documentation</em>. <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH">https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH</a>.
</div>
<div id="ref-pypackages" class="csl-entry">
———. 2023b. <span>“Packages.”</span> <em>Python 3.11.1 Documentation</em>. <a href="https://docs.python.org/3/tutorial/modules.html#packages">https://docs.python.org/3/tutorial/modules.html#packages</a>.
</div>
<div id="ref-pymodule" class="csl-entry">
———. 2023c. <span>“The Module Search Path.”</span> <em>Python 3.11.1 Documentation</em>. <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path">https://docs.python.org/3/tutorial/modules.html#the-module-search-path</a>.
</div>
<div id="ref-ganssle" class="csl-entry">
Ganssle, Paul. 2021. <span>“Why You Shouldn’t Invoke Setup.py Directly.”</span> <a href="https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html">https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Probably a bad name for a team. But, that is just my opinion.↩︎</p></li>
<li id="fn2"><p>And I mean these quotation marks, because I am not sure to call a system which can be out of the standard as “being more versatile”, or not.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Python</category>
  <category>Package</category>
  <category>Development workflow</category>
  <guid>https://pedro-faria.netlify.app/posts/2023/2023-02-06-python-pckg/en/index.html</guid>
  <pubDate>Mon, 06 Feb 2023 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2023/2023-02-06-python-pckg/package.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>JOINs são importantes fontes de duplicações em seus dados</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/pt/index.html</link>
  <description><![CDATA[ 




<section id="introdução" class="level1">
<h1>Introdução</h1>
<!--
A regra de ouro da programação DRY (*do not repeat yourself*) também pode influenciar outras dimensões de sua vida. Por exemplo, se você der o mesmo conselho para uma pessoa pela terceira vez ou mais, é melhor que você escreva ou documente esse conselho de alguma forma. Desse modo, você pode disseminar esse conselho para outras pessoas de forma mais efetiva. Esse post é um reflexo direto disso:

> When you’ve written the same code 3 times, write a function. When you’ve given the same in-person advice 3 times, write a blog post. ROBINSON, David, 2017 ^[Essa citação vem de um tweet de David Robinson, o qual está disponível no link: <https://twitter.com/drob/status/928447584712253440?s=20&t=5gy5SkBKGr6oXsWcg9LIag>].
-->
<p>Quando estamos construindo uma nova tabela de dados, é muito comum compararmos os nossos resultados com tabelas anteriores e nos depararmos com problemas de divergência nos dados. Isto é, situações como:</p>
<blockquote class="blockquote">
<p>Uhmm… a tabela antiga indica que o número de maquininhas vendidas no mês de Dezembro foi de 1387. Porém, esse mesmo indicador na tabela nova está em 1824 para o mesmo mês de Dezembro. Porque esse aumento?</p>
</blockquote>
<p>Aumentos desse tipo podem ocorrer por uma variedade de razões. Porém, operações de JOIN tem sido uma razão específica que tenho enfrentado com muita frequência em meu trabalho. Em outras palavras, JOINs são fontes extremamente comuns de dados duplicados. Como resultado, esses dados duplicados acabam gerando um “efeito expansivo” sobre os seus indicadores e suas tabelas.</p>
<p>Muitos analistas não compreendem o porquê, ou não enxergam como isso pode ocorrer. Nesse post, busco justamente esclarecer como uma operação de JOIN pode causar esse “efeito expansivo” em seus dados. Eu também explico esse efeito em detalhes no capítulo 6 do meu livro introdutório da linguagem R. Mais especificamente, a partir da seção <a href="https://pedropark99.github.io/Introducao_R/introdu%C3%A7%C3%A3o-a-base-de-dados-relacionais-com-dplyr.html#rela%C3%A7%C3%B5es-entre-keys-primary-keys-s%C3%A3o-menos-comuns-do-que-voc%C3%AA-pensa">Relações entre <em>keys: primary keys</em> são menos comuns do que você pensa</a>. Portanto, grande parte do conhecimento exposto aqui são referências diretas ao livro.</p>
</section>
<section id="esse-efeito-independe-da-linguagem-de-programação-utilizada" class="level1">
<h1>Esse efeito independe da linguagem de programação utilizada</h1>
<p>Por opção minha, vou utilizar exemplos na linguagem R para demonstrar esse “efeito expansivo” de JOINs. Mas você poderia facilmente transpor todos esses exemplos para qualquer outra linguagem de sua preferência (e.g.&nbsp;como o Python).</p>
<p>Ou seja, o conhecimento exposto aqui <strong>independe da linguagem utilizada</strong>. Pois o efeito descrito aqui é uma característica intrínseca ao processo de JOIN, e não da linguagem utilizada.</p>
</section>
<section id="um-exemplo-de-efeito-expansivo" class="level1">
<h1>Um exemplo de efeito expansivo</h1>
<p>Para demonstrar esse efeito expansivo, vou utilizar as tabelas <code>cores_de_pele</code> e <code>alturas</code> como exemplo. Podemos visualizar os dados dessas duas tabelas abaixo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">cores_de_pele</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 2
     ID Cor    
  &lt;dbl&gt; &lt;chr&gt;  
1   100 Pardo  
2   102 Branco 
3   104 Branco 
4   105 Amarelo</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">alturas</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 3
  DataRegistro    ID Altura
  &lt;date&gt;       &lt;dbl&gt;  &lt;dbl&gt;
1 2022-01-10     102   1.58
2 2022-01-10     105   1.72
3 2022-06-12     105   1.74
4 2022-08-24     105   1.75</code></pre>
</div>
</div>
<section id="necessidade-inicial" class="level2">
<h2 class="anchored" data-anchor-id="necessidade-inicial">Necessidade inicial</h2>
<p>Vamos supor que, no início, você precisava manter um indicador de “número de usuários por cor de pele” em um relatório. Para isso, você simplesmente contava o número de linhas na tabela <code>cores_de_pele</code> agrupado pelos valores da coluna <code>Cor</code>. Como demonstrado abaixo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb5-2">usuarios_por_cor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cores_de_pele <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Cor) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_usuarios =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb5-5"></span>
<span id="cb5-6">usuarios_por_cor</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 2
  Cor     N_usuarios
  &lt;chr&gt;        &lt;int&gt;
1 Amarelo          1
2 Branco           2
3 Pardo            1</code></pre>
</div>
</div>
</section>
<section id="uma-nova-necessidade" class="level2">
<h2 class="anchored" data-anchor-id="uma-nova-necessidade">Uma nova necessidade</h2>
<p>Porém, uma nova necessidade surge no time. Agora, você precisa calcular também a “altura média por cor de pele”. Você sabe que as alturas dos usuários estão armazenadas na tabela <code>alturas</code>, contudo, você precisa trazer essas alturas para dentro da tabela <code>cores_de_pele</code>, para que você possa de fato calcular a altura média para cada cor de pele.</p>
<p>Portanto, você precisa realizar um JOIN entre essas tabelas, e é isso que estamos fazendo no código abaixo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">dados <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cores_de_pele <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb7-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(alturas, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ID"</span>)</span></code></pre></div>
</div>
<p>Agora, temos uma nova tabela chamada <code>dados</code> que contém todos os dados que precisamos para calcular ambos os indicadores (“número de usuários” e “altura média”) para cada cor de pele. Entretanto, quando calculamos esses indicadores com essa tabela <code>dados</code>, perceba que o número de usuários (indicador <code>N_usuarios</code>) de cor “Amarelo” sofreu um <strong>aumento repentino</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">indicadores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dados <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Cor) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb8-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb8-4">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_usuarios =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(),</span>
<span id="cb8-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Altura_media =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Altura, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb8-6">    )</span>
<span id="cb8-7"></span>
<span id="cb8-8">indicadores</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 3
  Cor     N_usuarios Altura_media
  &lt;chr&gt;        &lt;int&gt;        &lt;dbl&gt;
1 Amarelo          3         1.74
2 Branco           2         1.58
3 Pardo            1       NaN   </code></pre>
</div>
</div>
<p>Repare que nós não mudamos a fórmula de cálculo do indicador <code>N_usuarios</code>. Nós aplicamos a mesma função <code>n()</code> que utilizamos anteriormente. Nós também agrupamos a tabela <code>dados</code> pela coluna <code>Cor</code> com <code>group_by()</code>, da mesma forma que fizemos anteriormente. Porque esse aumento ocorreu?</p>
<p>Nós não mudamos nada na fórmula de cálculo do indicador <code>N_usuarios</code>. Porém, nós introduzimos um novo item na cadeia de transformações da tabela. Mais especificamente, um LEFT JOIN realizado pela função <code>left_join()</code>. Ou seja, <strong>o JOIN é o que mudou nesse código</strong>, e ele é o culpado por esse estranho e repentino aumento no número de usuários de cor “Amarelo”.</p>
</section>
<section id="o-que-aconteceu" class="level2">
<h2 class="anchored" data-anchor-id="o-que-aconteceu">O que aconteceu?</h2>
<p>Se olharmos bem para a tabela resultado do JOIN (tabela <code>dados</code>) podemos começar a compreender o que aconteceu. Perceba que temos 6 linhas nessa tabela, isto é, temos 2 linhas a mais que a tabela <code>cores_de_pele</code> (que possui 4 linhas). Perceba também que temos 3 linhas nessa tabela descrevendo o mesmo usuário de ID 105. Ou seja, temos <strong>dados duplicados</strong> para esse usuário.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">dados</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
     ID Cor     DataRegistro Altura
  &lt;dbl&gt; &lt;chr&gt;   &lt;date&gt;        &lt;dbl&gt;
1   100 Pardo   NA            NA   
2   102 Branco  2022-01-10     1.58
3   104 Branco  NA            NA   
4   105 Amarelo 2022-01-10     1.72
5   105 Amarelo 2022-06-12     1.74
6   105 Amarelo 2022-08-24     1.75</code></pre>
</div>
</div>
<p>O usuário de ID 105 é o único usuário de cor “Amarelo” na tabela. Portanto, essas 3 linhas referentes ao ID 105 são a causa da mudança repentina no indicador <code>N_usuarios</code> para a cor “Amarelo”. Porém, como podemos ver abaixo, a tabela <code>cores_de_pele</code> tem 1 única linha para o usuário de ID 105. Como essa única linha se transformou em três?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">cores_de_pele</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 2
     ID Cor    
  &lt;dbl&gt; &lt;chr&gt;  
1   100 Pardo  
2   102 Branco 
3   104 Branco 
4   105 Amarelo</code></pre>
</div>
</div>
</section>
<section id="entenda-o-processo-de-pareamento-de-um-join" class="level2">
<h2 class="anchored" data-anchor-id="entenda-o-processo-de-pareamento-de-um-join">Entenda o processo de pareamento de um JOIN</h2>
<p>A única linha de ID 105 na tabela <code>cores_de_pele</code> se transformou em 3 linhas devido ao processo de pareamento dos dados realizado pelo JOIN. Todo JOIN, independe do tipo que ele seja (<em>left, inner, right, full</em>), vai sempre realizar um processo de pareamento entre os dados das duas tabelas, utilizando as colunas que representam as “chaves” do JOIN <span class="citation" data-cites="pedro2022">(Faria 2022)</span>.</p>
<p>Podemos visualizar esse processo de pareamento dos dados em Figure&nbsp;1. Perceba que, tanto no exemplo dessa imagem, quanto no exemplo desse post, as chaves do JOIN são representadas pela coluna <code>ID</code>. Logo, o JOIN vai puxar os dados de uma tabela para a outra, utilizando os valores dessa coluna como guia.</p>
<div id="fig-pareamento" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/pareamento1.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Processo de pareamento realizado em um JOIN</figcaption><p></p>
</figure>
</div>
<p>No exemplo de Figure&nbsp;1, ambas as tabelas que estão sendo unidas possuem uma linha para cada <code>ID</code>. Ou seja, não existe IDs duplicados em nenhuma das duas tabelas, formando assim, uma relação de “um para um” entre as chaves do JOIN.</p>
<p>Contudo, no exemplo deste post, a tabela <code>alturas</code> possui três linhas diferentes para o mesmo ID 105, enquanto a tabela <code>cores_de_pele</code> não apresenta IDs duplicados. Isso acaba formando uma relação de “um para muitos” entre as chaves do JOIN. Nesse caso, como o processo de pareamento do JOIN deve se comportar? Bem, o seguinte vai acontecer…</p>
<ol type="1">
<li><p>O JOIN vai pegar o ID 105 da tabela <code>cores_de_pele</code> e pesquisar por ele ao longo da tabela <code>alturas</code>. Como resultado, o JOIN vai localizar três linhas distintas para o ID 105 na tabela <code>alturas</code>.</p></li>
<li><p>O JOIN percebe que há um desequilíbrio (1 linha de <code>cores_de_pele</code> <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> 3 linhas de <code>alturas</code>).</p></li>
<li><p>Para reequilibrar essa balança, o JOIN vai executar um produto cartesiano entre as linhas dessas duas tabelas.</p></li>
</ol>
<p>A Figure&nbsp;2 apresenta de forma visual essa conexão:</p>
<div id="fig-desenho-expansao" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/expansao.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Uma representação visual do efeito expansivo sobre o ID 105</figcaption><p></p>
</figure>
</div>
<p>Ou seja, o JOIN vai retornar como resultado, <strong>todas as combinações possíveis</strong> entre a linha única de <code>cores_de_pele</code> e as 3 linhas de <code>alturas</code>. Ou seja, a linha única de <code>cores_de_pele</code> é combinada com cada uma das 3 linhas de <code>alturas</code>. Como resultado, temos as 3 linhas de ID 105 na tabela <code>dados</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">dados</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 4
     ID Cor     DataRegistro Altura
  &lt;dbl&gt; &lt;chr&gt;   &lt;date&gt;        &lt;dbl&gt;
1   100 Pardo   NA            NA   
2   102 Branco  2022-01-10     1.58
3   104 Branco  NA            NA   
4   105 Amarelo 2022-01-10     1.72
5   105 Amarelo 2022-06-12     1.74
6   105 Amarelo 2022-08-24     1.75</code></pre>
</div>
</div>
</section>
</section>
<section id="conclusão" class="level1">
<h1>Conclusão</h1>
<p>Portanto, o produto cartesiano executado pelo JOIN gerou linhas duplicadas para o ID 105, e essa introdução de dados duplicados acabou distorcendo o valor dos indicadores. <strong>O efeito expansivo está no produto cartesiano gerado pelo JOIN</strong>, e você deve ficar atento em todas as situações em que esse produto pode ocorrer.</p>
<p>Mas então… em que momentos especificamente esse produto cartesiano é gerado? A resposta é: sempre que existir uma relação de “um para muitos” ou de “muitos para muitos” entre as chaves do JOIN. As “chaves” (ou <em>keys</em>) de todo JOIN podem formar três tipos de relação: 1) um para um; 2) um para muitos; e 3) muitos para muitos <span class="citation" data-cites="pedro2022">(Faria 2022)</span>. Em Figure&nbsp;3 apresentamos de forma visual essas relações, e os produtos cartesianos que elas geram, onde a coluna <code>key</code> representa a “chave” do JOIN.</p>
<div id="fig-relacoes" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/relacoes_keys.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Resumo das relações possíveis entre <em>keys</em> e seus respectivos produtos cartesianos</figcaption><p></p>
</figure>
</div>
<p>Perceba que, para o caso de relação um para um, o número de linhas na tabela resultado permanece inalterado. Porém, as relações que realmente nos interessam nesse post são as relações de “um para muitos” e de “muitos para muitos”. Perceba que um produto cartesiano ocorre nesses dois tipos de relação, e, como resultado, algum nível de “duplicação” de informações é gerado na tabela resultado do JOIN.</p>
<p>É através dessa “duplicação” que pode ocorrer o que estamos chamando de “efeito expansivo” dos JOINs nesse post. Perceba em Figure&nbsp;3 que o “efeito expansivo” e, consequentemente, a distorção sobre os seus indicadores pode ser ainda maior no caso de relações “muitos para muitos”. Pois o produto cartesiano gerado por esse tipo de relação resulta em um número maior de linhas duplicadas.</p>
<p>É provável que as “chaves” do seu JOIN apresentem ao menos alguns valores (ou IDs específicos) que possuem uma relação de “um para um”. Logo, esses valores específicos não vão causar esse efeito expansivo em seu JOIN. O ID 102 da tabela <code>cores_de_pele</code> é um exemplo de ID que também está presente na tabela <code>alturas</code>, e que ocupa uma única linha dessa tabela. Logo, esse ID específico forma uma relação de “um para um” entre as tabelas <code>cores_de_pele</code> e <code>alturas</code>.</p>
<p>Por outro lado, é bastante provável que as “chaves” do seu JOIN também possuem alguns valores (ou IDs específicos) que apresentem relações do tipo “um para muitos” ou “muitos para muitos”. Portanto, um produto cartesiano vai ocorrer para cada um desses valores que apresentam essas relações. Isto é, se por exemplo, tivessemos 30 IDs na tabela <code>x</code> que formassem uma relação de “um para muitos” com IDs na tabela <code>y</code>, um JOIN entre as tabelas <code>x</code> e <code>y</code>, geraria como resultado 30 produtos cartesianos diferentes. Por causa disso, o efeito expansivo sobre a sua tabela pode ser considerável se você tiver um número grande de valores que possuem esses tipos de relações.</p>
<p>Por último, vale destacar uma última vez, que estes produtos cartesianos independem do tipo de JOIN (<em>inner, left, right, full</em>) que você está executando, mas dependem diretamente dos seus dados e da relação que eles formam entre as chaves do JOIN.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-pedro2022" class="csl-entry">
Faria, Pedro Duarte. 2022. <em>Introdução à Linguagem r: Seus Fundamentos e Sua Prática</em>. 4th ed. Belo Horizonte.
</div>
</div></section></div> ]]></description>
  <category>JOINs</category>
  <guid>https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/pt/index.html</guid>
  <pubDate>Tue, 10 Jan 2023 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2023/2023-01-10-join-duplicates/expansao.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Novidades da 4° edição de Introdução à Linguagem R: seus fundamentos e sua prática</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2022/2022-12-26-4th-edition-rbook/pt/index.html</link>
  <description><![CDATA[ 




<section id="introdução" class="level1">
<h1>Introdução</h1>
<p>É com muito prazer que venho compartilhar com você as novidades que estou trazendo para essa nova edição do livro <a href="https://pedro-faria.netlify.app/publications/book/introducao_linguagem_r/pt/">Introdução à Linguagem R: seus fundamentos e sua prática</a>. Esta quarta edição busca principalmente fazer algumas correções e adições que buscam manter o livro como um <strong>referência moderna, introdutória e técnica</strong> sobre a linguagem R.</p>
<p><a href="https://www.amazon.com.br/dp/B0BNW4K232"> <button type="button" class="btn btn-primary">Compre uma versão do livro</button></a> <a href="https://pedro-faria.netlify.app/publications/book/introducao_linguagem_r/pt/"> <button type="button" class="btn btn-primary">Página de publicação</button></a> <a href="https://pedropark99.github.io/Introducao_R/"> <button type="button" class="btn btn-primary">Leia online</button></a></p>
</section>
<section id="o-que-temos-de-novo" class="level1">
<h1>O que temos de novo?</h1>
<p>Primeiro, a seção do capítulo 4 que citava o pacote <code>SAScii</code> foi removida. Pois durante o desenvolvimento desta quarta edição, foi identificado que este pacote não estava funcionando corretamente em versões mais recentes do R.</p>
<p>Segundo, uma nova seção foi adicionada ao capítulo 5, para introduzir o novo operador <em>pipe</em> do R (<code>|&gt;</code>) - que está disponível desde a versão 4.1 da linguagem, além de explicar as diferenças deste novo operador com o operador <em>pipe</em> do pacote <code>magrittr.</code></p>
<p>Terceiro, várias melhorias e pequenas correções foram aplicadas sobre o capítulo 8, com o objetivo de melhorar a clareza do conhecimento exposto e da organização do capítulo.</p>
<p>Quarto, a seção <a href="https://pedropark99.github.io/Introducao_R/configurando-componentes-est%C3%A9ticos-do-gr%C3%A1fico-no-ggplot2.html#alterando-as-fontes-do-seu-gr%C3%A1fico">Alterando as fontes do seu gráfico</a> no capítulo 9 foi reformulada, com o objetivo de substituir o pacote <code>extrafont</code> (o qual era a solução descrita em edições passadas desta obra) pelo pacote <code>ragg</code>, o qual se tornou uma solução mais moderna e robusta para o uso de fontes em gráficos do R.</p>
<p>Quinto, tivemos algumas melhorias sobre o capítulo 4, especialmente sobre a descrição de endereços absolutos e relativos, assim como a seção <a href="https://pedropark99.github.io/Introducao_R/importando-e-exportando-dados-com-readr-readxl-e-haven.html?q=guess#sec:readr_guess_encoding">A função <code>guess_encoding()</code> como um possível guia</a> que foi atualizada com o objetivo de acompanhar as mudanças recentes sobre a função <code>readr::guess_encoding()</code>.</p>
</section>
<section id="sobre-onde-encontrar-o-livro" class="level1">
<h1>Sobre onde encontrar o livro</h1>
<p>Você pode ler toda a obra de maneira gratuita e aberta através de seu <a href="https://pedropark99.github.io/Introducao_R/">website</a> 📖. Caso você queira contribuir para o projeto desse livro, você pode adquirir uma <a href="https://www.amazon.com.br/dp/B0BNW4K232">versão física ou em EBook do livro através da loja da Amazon</a>. Ao comprar essas versões, você estará me ajudando a continuar contribuindo com a nossa comunidade ❤️. Além disso, você também pode doar um Pix para o autor (veja a página <a href="https://pedro-faria.netlify.app/donate.html">Donate or Sponsor Me</a>).</p>
</section>
<section id="contribua-para-a-obra-ou-faça-sugestões" class="level1">
<h1>Contribua para a obra ou faça sugestões!</h1>
<p>Caso seja de seu interesse, você pode contribuir diretamente para a obra, ao postar <em>pull requests</em> dentro de seu <a href="https://github.com/pedropark99/Introducao_R">repositório oficial</a>. Para mais, você também pode fazer sugestões ou comentários, ao postar <em>issues</em> neste mesmo repositório.</p>


</section>

 ]]></description>
  <category>Book</category>
  <category>R Language</category>
  <guid>https://pedro-faria.netlify.app/posts/2022/2022-12-26-4th-edition-rbook/pt/index.html</guid>
  <pubDate>Mon, 26 Dec 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2022/2022-12-26-4th-edition-rbook/featured.png" medium="image" type="image/png" height="206" width="144"/>
</item>
<item>
  <title>Introducing the {spark_map} Python package</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2022/2022-12-21-spark-map-v0.2.3/en/index.html</link>
  <description><![CDATA[ 




<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p><code>spark_map</code> is a python package that offers some tools that help you to apply a function over multiple columns of Apache Spark DataFrames, using <code>pyspark</code>. The package offers two main functions (or “two main methods”) to distribute your calculations, which are <code>spark_map()</code> and <code>spark_across()</code>. Furthermore, the package offers several methods to map (or select) the columns to which you want to apply your calculations (these methods are called <em>mapping methods</em> in the package).</p>
<p><a href="https://github.com/pedropark99/spark_map"> <button type="button" class="btn btn-primary">Official repository</button></a> <a href="https://pedropark99.github.io/spark_map"> <button type="button" class="btn btn-primary">Package website</button></a> <a href="https://pypi.org/project/spark-map/"> <button type="button" class="btn btn-primary">Page on PyPI</button></a></p>
</section>
<section id="how-to-install-it" class="level2">
<h2 class="anchored" data-anchor-id="how-to-install-it">How to install it ?</h2>
<p>You can install the package through PyPI, by using the <code>pip</code> tool on your terminal, like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install spark-map</span></code></pre></div>
</section>
<section id="what-problem-spark_map-solves" class="level2">
<h2 class="anchored" data-anchor-id="what-problem-spark_map-solves">What problem <code>spark_map</code> solves?</h2>
<p>I work a lot with data pipelines using Apache Spark and <code>pyspark</code> at <a href="https://www.take.net/">Take Blip</a>. Some day, I got myself writing a very long <code>agg()</code> statement to aggregate multiple columns of my Spark DataFrame with the same function, like this one below:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pyspark.sql.functions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>, column</span>
<span id="cb2-2">aggregates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb2-3">    spark.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards.detailed_sales_per_user'</span>)</span>
<span id="cb2-4">        .groupBy(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'day'</span>)</span>
<span id="cb2-5">        .agg(</span>
<span id="cb2-6">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_lite'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_lite'</span>),</span>
<span id="cb2-7">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_silver'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_silver'</span>),</span>
<span id="cb2-8">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_gold'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_gold'</span>),</span>
<span id="cb2-9">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_premium'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_premium'</span>),</span>
<span id="cb2-10">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_enterprise'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_enterprise'</span>),</span>
<span id="cb2-11">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(column(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_business'</span>)).alias(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards_business'</span>)</span>
<span id="cb2-12">        )</span>
<span id="cb2-13">)</span></code></pre></div>
</div>
<p>Looking at this code, I had the following thought: “this is not elegant, and is error-prone, because it involves copy and paste, and very subtle changes in each line”. Following the golden rule of DRY (<em>do not repeat yourself</em>), I had to find a better way to write this code.</p>
<p>I just wanted to apply the <code>sum()</code> function over multiple columns of <code>cards.detailed_sales_per_user</code> grouped by <code>day</code>. Because of that, I decided to develop the <code>spark_map</code> package, which allows you to declare this operation in a much better, elegant and concise way, by using the <code>spark_map()</code> function.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> spark_map.functions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> spark_map</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> spark_map.mapping <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> starts_with</span>
<span id="cb3-3">grouped_by_day <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spark.table(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards.detailed_sales_per_user'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-4">    .groupBy(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'day'</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6">aggregates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spark_map(grouped_by_day, starts_with(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cards'</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>)</span></code></pre></div>
</div>
</section>
<section id="how-spark_map-works" class="level2">
<h2 class="anchored" data-anchor-id="how-spark_map-works">How <code>spark_map()</code> works ?</h2>
<p>The <code>spark_map()</code> function receives three inputs, which are <code>table</code> (i.e.&nbsp;the Spark DataFrame you want to use), <code>mapping</code> (i.e.&nbsp;a “mapping” that describes which columns you want to apply your function), and <code>function</code> (i.e.&nbsp;the function you want to apply to each column in the Spark DataFrame).</p>
<p>In short, the <code>starts_with('cards')</code> section tells <code>spark_map()</code> that you want to apply the input function on all columns of <code>grouped_by_day</code> whose name starts with the text <code>'cards'</code>. In other words, all <code>spark_map()</code> does is to apply the function you want (in the above example this function is <code>sum()</code>) to whatever column it finds in the input DataFrame which fits in the description of your mapping method.</p>
<p>You can use different mapping methods to select the columns of your DataFrame, and the package offers several built-in methods which can be very useful for you, which are available through the <code>spark_map.mapping</code> module of the package. You can select columns based on:</p>
<ul>
<li><code>at_position()</code>: their position (i.e.&nbsp;3rd, 4th and 5th columns);</li>
<li><code>matches()</code>: a regex to which their match;</li>
<li><code>are_of_type()</code>: the type of data their store (i.e.&nbsp;all columns of type <code>int</code>);</li>
<li><code>starts_with()</code> and <code>ends_with()</code>: its name starting or ending with a particular pattern;</li>
<li><code>all_of()</code>: its name being inside a specific list of options;</li>
</ul>
</section>
<section id="the-differences-between-spark_map-and-spark_across" class="level2">
<h2 class="anchored" data-anchor-id="the-differences-between-spark_map-and-spark_across">The differences between <code>spark_map()</code> and <code>spark_across()</code></h2>
<p>There are two main functions in the package that performs the heavy work, which are <code>spark_map()</code> and <code>spark_across()</code>.</p>
<p>Both of these functions perform the same work, which is to apply a function over a set of columns of a Spark DataFrame. But they differ in the method they use to apply this function. While <code>spark_map()</code> uses the <code>agg()</code> method of Spark DataFrame’s to apply the function, <code>spark_across()</code> uses the <code>withColumn()</code> method to do so.</p>
<p>This means that you will mainly use <code>spark_map()</code> when you want to calculate <strong>aggregates</strong>. Is worthy pointing out that <code>spark_map()</code> works perfectly with grouped DataFrames as well (i.e.&nbsp;<code>GroupedData</code>). In the other hand, you will use <code>spark_across()</code> when you want to just transform the values of multiple colums at once by applying the same function over them.</p>
</section>
<section id="check-the-documentation-for-more-examples-and-details" class="level1">
<h1>Check the documentation for more examples and details</h1>
<p>The <a href="https://pedropark99.github.io/spark_map/">website</a> have documentation for all functions of the package. If you have any trouble to understand or to find examples, is a good idea to check the <a href="https://pedropark99.github.io/spark_map/reference-en.html">Function Reference</a> of the package, to see examples and more details about how each function works.</p>
<p>To understand how the mapping methods works, and how you can create your own mapping method, a good place to start is to read the article <a href="https://pedropark99.github.io/spark_map/english/articles/building-mapping.html">Building the mapping</a> available at the website of the package.</p>


</section>

 ]]></description>
  <category>Python</category>
  <category>Package</category>
  <category>pyspark</category>
  <category>Apache Spark</category>
  <guid>https://pedro-faria.netlify.app/posts/2022/2022-12-21-spark-map-v0.2.3/en/index.html</guid>
  <pubDate>Wed, 21 Dec 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2022/2022-12-21-spark-map-v0.2.3/spark-map-logo.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Erro de memória no Power BI Online? Hora de repensar o seu dashboard</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/pt/index.html</link>
  <description><![CDATA[ 




<section id="introdução" class="level1">
<h1>Introdução</h1>
<p>Em um dia recente, eu descobri que um dos dashboards que estavam publicados em nosso ambiente de produção do Power BI Online havia sofrido um erro de atualização. Logo, eu prontamente parei o que estava fazendo e comecei a investigar o motivo do erro, até porque: 1) o nosso cliente depende dos dados desse dashboard ; e 2) erros em produção não são legais!</p>
<p>Nesse post, eu quero mostrar como esse tipo de erro de atualização pode ser um forte sinal de que você precisa repensar o design de seu dashboard. Em outras palavras, meu objetivo é mostrar que se você está puxando milhões e milhões de linhas de dados para um dashboard… é provável que você <strong>não tenha entendido o que é um dashboard e qual o seu propósito.</strong></p>
</section>
<section id="contexto" class="level1">
<h1>Contexto</h1>
<p>Bem, você já sabe que tudo começou por um erro durante a atualização de um dashboard publicado no Power BI Online. Porém, este não era qualquer erro, e sim, um erro de falta de memória:</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/image.png" class="img-fluid figure-img" style="width:70.0%"></p>
<p></p><figcaption class="figure-caption">Mensagem de erro da atualização no Power BI Online</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Perceba pela mensagem acima, que o motivo do erro foi uma falta de memória (<em>insufficient memory</em>) nos clusters responsáveis por executar a atualização. O que isso significa? Significa que este dashboard estava pedindo por um volume tão grande, mas tão grande de dados durante a atualização, que os clusters que estavam executando essa atualização não tinham mais espaço para alocar esse volume tão grande de dados.</p>
<section id="hora-de-explorar-o-terreno-desconhecido" class="level2">
<h2 class="anchored" data-anchor-id="hora-de-explorar-o-terreno-desconhecido">Hora de explorar o terreno desconhecido</h2>
<p>Nesse dia, eu estava em minha primeira semana em uma nova equipe, e, eu não conhecia esse dashboard. Em outras palavras, eu havia herdado esse dashboard, que foi criado pelos analistas anteriores dessa equipe. Logo, eu precisava abrir o <code>.pbix</code> desse dashboard e começar a investigar, tentando descobrir que mistérios e perigos estão escondidos dentro dele.</p>
<p>Inicialmente, percebi oito tabelas associadas ao dashboard que foram puxadas diretamente dos nossos databases SQL (<code>campanhas</code>, <code>cartoes_selecionados</code>, <code>usuarios_por_dia</code>, <code>formatos</code>, <code>inputs</code>, <code>usuarios_por_mes</code>, <code>perfis</code> e <code>tracks</code>), as quais estão expostas na imagem abaixo<sup>1</sup>. Além delas, temos outras duas tabelas calculadas no próprio <code>.pbix</code>, através de DAX (<code>dCalendario</code> e <code>Medidas</code>).</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/tabelas.png" class="img-fluid figure-img" style="width:50.0%"></p>
<p></p><figcaption class="figure-caption">Tabelas associadas ao arquivo <code>.pbix</code></figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Decidi simplesmente clicar no botão de <code>Atualizar</code>. Já que o erro ocorreu durante a atualização, imaginei que seria mais simples descobrir a fonte do problema dessa forma.</p>
<p>A maioria das tabelas atualizaram rapidamente. Porém, a tabela <code>input</code> ainda estava atualizando. Em resumo, essa tabela continha todas as mensagens digitadas por todos os usuários que acessaram o nosso sistema.</p>
<p>O tempo foi passando, e após 3 horas com a atualização rodando em meu computador, o Power BI já havia puxado mais de 80 milhões de linhas para essa única tabela. Decidi verificar se o recurso de <a href="https://learn.microsoft.com/pt-br/power-bi/connect-data/incremental-refresh-overview">Atualização incremental</a> estava ligado para essa tabela <code>input</code>, e, percebi que ele estava desligado.</p>
</section>
<section id="a-fonte-do-problema" class="level2">
<h2 class="anchored" data-anchor-id="a-fonte-do-problema">A fonte do problema</h2>
<p>Portanto, a fonte do problema estava claro. Como o recurso de “Atualização incremental” estava desligado para essa tabela <code>input</code>, a cada atualização, o Power BI Online estava recalculando toda a tabela <code>input</code> de uma vez só.</p>
<p>Isso significa que, todos os dias, o Power BI estava coletando todas as <strong>80 milhões de linhas</strong> dessa tabela <code>input</code>. Devido a este volume monumental de dados, o serviço do Power BI decidiu interromper a atualização.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/conversa.png" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
</section>
</section>
<section id="a-solução-simples-e-suja-o-famoso-quick-and-dirty" class="level1">
<h1>A solução simples e suja (o famoso <em>quick and dirty</em>)</h1>
<p>Um jeito simples de resolver esse erro de falta de memória, seria simplesmente não carregar todas as 80 milhões de linhas de uma vez só! E sim, carregar essas linhas aos poucos.</p>
<p>Para isso, poderíamos ligar a atualização incremental nessa tabela <code>input</code>. Desse modo, cada atualização vai atualizar apenas os dados dos últimos dias (ao invés de atualizar a tabela inteira), e em seguida, começamos a carregar os dados aos poucos para o dashboard.</p>
<p>Por exemplo, na primeira atualização, tentamos puxar os dados do primeiro mês, depois, na próxima atualização, puxamos os dados do segundo mês, e assim por diante, até puxarmos todas as 80 mihões de linhas. Contudo, isso não é uma solução de fato!</p>
</section>
<section id="antes-de-tudo-pare-um-pouco-e-pense" class="level1">
<h1>Antes de tudo, pare um pouco e pense</h1>
<p>Primeiro de tudo, pare! E pense… tente entender o porquê você está puxando milhões e milhões de linhas. Você realmente precisa desse volume tão grande de dados em seu dashboard? É muito provável que não!</p>
<blockquote class="blockquote">
<p><strong>Insight 1:</strong> Se você está puxando milhões e milhões de linhas de dados para um dashboard, é provável que você não tenha entendido o que é um dashboard e qual o seu propósito.</p>
</blockquote>
<section id="manutenção-se-torna-um-peso-grande" class="level2">
<h2 class="anchored" data-anchor-id="manutenção-se-torna-um-peso-grande">Manutenção se torna um peso grande</h2>
<p>Atualizar 80 milhões de linhas <strong>não é prático, não é rápido, e é difícil de manter e testar</strong>. Se por algum motivo, você precisar atualizar todos os dados de seu dashboard<sup>2</sup>, você vai muito provavelmente perder uma tarde, talvez um dia inteiro de trabalho só para completar a atualização.</p>
<blockquote class="blockquote">
<p><strong>Insight 2:</strong> Um dashboard deve ser fácil de se manter e expandir. Em contrapartida, manter um volume grande de dados em um dashboard é trabalhoso demais.</p>
</blockquote>
</section>
<section id="vamos-pensar-um-pouco-sobre-user-experience" class="level2">
<h2 class="anchored" data-anchor-id="vamos-pensar-um-pouco-sobre-user-experience">Vamos pensar um pouco sobre <em>user experience</em></h2>
<p>Por um momento, vamos adotar o papel de um UX, e refletir sobre a experiência dos usuários que consomem o nosso dashboard. É esquisito pensar dessa forma, entretanto, às vezes, nós nos esquecemos que pessoas de verdade usam o nosso produto (nesse caso, o dashboard) e se baseiam nele diariamente para desempenhar trabalhos e planejamentos importantes. Portanto, é muito importante que eles tenham uma experiência agradável utilizando o nosso dashboard.</p>
<ul>
<li><strong>Definindo o público-alvo:</strong> Primeiro, quem utiliza o nosso dashboard?</li>
</ul>
<p>Na maioria das vezes, quem está consumindo os nossos dashboards são <strong>gerentes de alguma área</strong>. Gente importante, que tem pouco tempo no dia, e que lidam com várias tarefas e responsabilidades ao mesmo tempo.</p>
<p>É justamente por essa escassez de tempo e atenção que, em geral, gerentes gostam muito de dashboards. Eles gostam de entrar num dashboard, e rapidamente visualizar todos os indicadores que eles precisam acompanhar. Com isso, eles não precisam gastar horas e horas caçando números em diferentes lugares, e com diferentes pessoas. Está tudo concentrado em um lugar único e de fácil acesso.</p>
<p>Por isso, um dashboard tem que ser <strong>rápido</strong>. Todo gerente tem pressa, então, a página inicial do dashboard precisa carregar rápido! Navegar pelas diferentes páginas e visões do dashboard também precisa ser uma experiência rápida e flúida. Ninguém gosta de uma página que demora 5 minutos para carregar… muito menos um gerente.</p>
<p>É por esse mesmo motivo, que cada página de um dashboard precisa ser focada em um tema central, e manter o mínimo possível de informação que o gerente precisa, da forma mais clara possível. Se uma mesma página mistura diferentes temas, o leitor pode ter dificuldade em navegar pelos indicadores e encontrar o que ele está procurando (ou seja, misturar temas = confusão mental!).</p>
<blockquote class="blockquote">
<p>Ah! Achei a página com os indicadores de vendas. Ok. Espera! Por que os indicadores de atendimento estão nessa página? Onde está o número de vendas de maquininhas nesse mês? Ahhh achei! Não, espera… Esse é o número de maquininhas vendidas somente no setor de atendimento, mas eu quero os números de venda em TODOS os setores…</p>
</blockquote>
<p>Portanto, dashboards precisam ser rápidos, claros e bem dividos! E se você está puxando um volume muito grande de dados para dentro dele, você com certeza vai impactar negativamente a rapidez desse dashboard, pois ele precisa carregar o grande conjunto de dados que você inseriu lá dentro. Além disso, um grande volume de dados pode indicar que você está preenchendo esse dashboard com informações que são irrelevante para o gerente.</p>
<blockquote class="blockquote">
<p><strong>Insight 3:</strong> Dashboards precisam ser rápidos, claros e bem dividos!</p>
</blockquote>
</section>
<section id="gerentes-querem-indicadores-e-agregados-não-dados-brutos" class="level2">
<h2 class="anchored" data-anchor-id="gerentes-querem-indicadores-e-agregados-não-dados-brutos">Gerentes querem indicadores e agregados! Não dados brutos…</h2>
<p>Gerentes querem acompanhar indicadores e agregados que descrevam de maneira rápida a situação atual do negócio que eles gerem, e das pessoas que estão envolvidas nele.</p>
<p>Logo, por que trazer dados brutos para o dashboard? Por que trazer para o dashboard uma tabela com a lista completa de todos os usuários que visitaram o nosso serviço em todos os dias do ano? Se eu posso simplesmente trazer uma tabela já agregada, com o número de usuários que visitaram esse serviço dentro de cada dia do ano?</p>
<blockquote class="blockquote">
<p><strong>Insight 4:</strong> Gerentes estão interessados em acompanhar indicadores e agregados, ao invés de dados brutos. Portanto, importe os seus dados já agregados para dentro do dashboard.</p>
</blockquote>
</section>
<section id="isso-significa-que-dados-brutos-geralmente-não-devem-estar-em-um-dashboard" class="level2">
<h2 class="anchored" data-anchor-id="isso-significa-que-dados-brutos-geralmente-não-devem-estar-em-um-dashboard">Isso significa que dados brutos geralmente não devem estar em um dashboard</h2>
<p>Isso tudo não significa que gerentes não consomem dados brutos em momento algum. Mas isso significa que um dashboard é geralmente o lugar errado para esses dados brutos.</p>
<p>É até comum em certos momentos um gerente pedir para nós coletarmos um conjunto específico de dados brutos para ele. Mas se você refletir sobre todas as ocasiões onde isso ocorreu, você talvez consiga perceber que essas situações caem em duas categorias:</p>
<ol type="1">
<li><p>o gerente queria investigar um problema bem específico, e é bem provável que esse problema não se repita, logo, ele nunca mais vai precisar desses dados brutos específicos novamente (i.e.&nbsp;foi uma entrega pontual);</p></li>
<li><p>o gerente precisa desses dados brutos com certa frequência para alimentar algum fluxo de trabalho que você não conhece, ou está em uma equipe/setor diferente do seu;</p></li>
</ol>
<p>Essas duas categorias não justificam incluir dados brutos em um dashboard. Para a primeira situação, você pode armazenar a query (ou o script) que você usou no momento para puxar os dados brutos que o gerente te pediu naquele momento. Desse modo, se lá na frente, por algum motivo você precisar extrair novamente esses dados brutos, você precisa apenas retornar à query e executá-la novamente. Além disso, é muito mais econômico armazenar centenas de queries distintas, do que armazenar os dados brutos produzidos em cada uma dessas queries (imagine ter centenas de CSV’s de vários MB’s armazenados no seu computador…).</p>
<p>Em minha equipe de trabalho, nós utilizamos um board de cards no estilo kanban (como o Asana, ou o Azure DevOps, etc.) para organizar as nossas tarefas e demandas. Eu particularmente gosto de sempre salvar a query que eu utilizei para completar uma demanda, dentro do card correspondente a essa demanda. Sendo assim, caso eu precisar utilizar essa mesma query, eu procuro rapidamente pelo card dessa demanda no histórico do nosso board de cards, e, copio a query que está salva lá dentro desse card.</p>
<p>Já na segunda situação, faz mais sentido criar rotinas automatizadas de envio desses dados para o gerente, ou para qualquer que seja a pessoa que esteja precisando desses dados. Ou seja, se por exemplo, o Paulo precisa extrair toda semana, uma lista com todos os usuários que são elegíveis a adquirir um empréstimo, eu posso, por exemplo, criar uma rotina automatizada em Python ou em R, que pega os dados brutos do nosso database SQL, filtra todos esses usuários elegíveis, e compila esses dados em um formato agradável e intuitivo, e por fim, envia esses dados para o Paulo, seja por email, ou talvez, para um servidor ou uma pasta na nuvem que o Paulo tem acesso.</p>
</section>
<section id="dashboards-são-ferramentas-de-uso-diário" class="level2">
<h2 class="anchored" data-anchor-id="dashboards-são-ferramentas-de-uso-diário">Dashboards são ferramentas de uso diário</h2>
<p>O gerente depende desse dashboard todos os dias (ou talvez toda semana) para extrair informações importantes sobre o seu negócio. Portanto, dashboards possuem uma frequência de uso alta, e por essa característica, é essencial que um dashboard <strong>seja estável</strong> e que esteja sempre o mais atualizado possível.</p>
<p>Contudo, ao puxar milhões e milhões de linhas de dados para um dashboard, todos os dias, você está aumentando as chances desse dashboard enfrentar um erro de atualização. Isso não é algo estável!</p>
<p>Você não quer erros acontecendo no seu dashboard, pois você não quer perder uma tarde inteira de trabalho investigando onde nas milhões e milhões de linhas que você puxou está a fonte do erro. Você também não quer perder horas e horas atualizando essas milhões de linhas. Isso está bastante relacionado também com o insight 2, onde definimos que um dashboard deve ser fácil de se manter e expandir.</p>
<blockquote class="blockquote">
<p><strong>Insight 5:</strong> Dashboards precisam ser estáveis! Quanto menos erros ele gerar, melhor para você (que vai gastar menos tempo de debugging e manutenção) e também para o gerente que utiliza esse dash.</p>
</blockquote>
<p>Você quer um dashboard simples, leve, claro, e que funcione da forma como você esperava que ele funcionasse. Na empresa onde trabalho, temos um lema: “A simplicidade é o mais alto nível de sofisticação”. Portanto, leve essa simplicidade para os seus dashboards. Não tente fazer coisas complexas e confusas, que são difíceis de se entender e de investigar (ou “desbugar”).</p>
</section>
<section id="as-vezes-não-existe-maneira-simples-de-contornar-o-problema" class="level2">
<h2 class="anchored" data-anchor-id="as-vezes-não-existe-maneira-simples-de-contornar-o-problema">As vezes não existe maneira simples de contornar o problema</h2>
<p>Em certas ocasiões, os usuários de um dashboard realmente precisam ver algum tipo de dado bruto dentro dele. Nesses casos, você traçar algumas outras estratégias e perguntas para reduzir ao máximo o número de linhas importadas. Por exemplo:</p>
<ol type="1">
<li>eu posso trazer para dentro dashboard uma parte bastante filtrada dos dados brutos?</li>
</ol>
<p>Ou seja, ao invés de trazer as 80 milhões de linhas, será que eu consigo aplicar vários filtros sobre esses dados brutos, antes de importá-los para dentro do dashboard? Esses filtros podem te ajudar a reduzir drasticamente o número de linhas carregadas.</p>
<ol start="2" type="1">
<li>ao invés de trazer todos os dados, por que não trazer uma amostra aleatória da população?</li>
</ol>
<p>É útil entender o porquê exatamente o seu usuário precisa ver algum dado bruto em seu dashboard. Ao entender o que esse usuário está perseguindo, você talvez chegue a conclusão de que o seu usuário já ficaria satisfeito ao ver pelo menos uma parte dos dados brutos (não precisa trazer literalmente tudo). Portanto, você poderia selecionar uma amostra aleatória dos dados, e importar apenas essa amostra para dentro do dashboard.</p>
<ol start="3" type="1">
<li>será que eu preciso manter o histórico desses dados brutos dentro do dash?</li>
</ol>
<p>Será que o seu cliente precisa frequentemente visualizar os dados brutos de 6 meses atrás? É muito provável que não. Então, por que não manter apenas os dados brutos dos últimos 30 dias? Em outras palavras, os dados históricos são sempre limpos, e apenas os dados brutos mais recentes são mantidos.</p>
<p>Ao reduzir o volume de dados mantidos dentro do dashboard, você talvez traga uma melhoria considerável sobre o tempo de navegação e carregamento do dashboard (lembre-se, um dashboard preciso ser rápido, claro e bem divido).</p>
</section>
</section>
<section id="conclusão" class="level1">
<h1>Conclusão</h1>
<p>Espero que neste artigo, tenha consiguido deixar claro como um número exacerbado de dados brutos em seu dashboard pode ser um forte sinal de que você tenha desenvolvido um dashboard mal desenhado. Apenas para recapitular, os principais pontos abordados foram:</p>
<ol type="1">
<li><p>Se você está puxando milhões e milhões de linhas de dados para um dashboard, é provável que você não tenha entendido o que é um dashboard e qual o seu propósito.</p></li>
<li><p>Um dashboard deve ser fácil de se manter e expandir. Em contrapartida, manter um volume grande de dados em um dashboard é trabalhoso demais.</p></li>
<li><p>Dashboards precisam ser rápidos, claros e bem dividos!</p></li>
<li><p>Gerentes estão interessados em acompanhar indicadores e agregados, ao invés de dados brutos. Portanto, importe os seus dados já agregados para dentro do dashboard.</p></li>
<li><p>Dashboards precisam ser estáveis! Quanto menos erros ele gerar, melhor para você (que vai gastar menos tempo de debugging e manutenção) e também para o gerente que utiliza esse dash.</p></li>
</ol>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Vale destacar que essas tabelas foram renomeadas com o objetivo de manter o anonimato do cliente e dos dados associados a elas.↩︎</p></li>
<li id="fn2"><p>Como exemplo, talvez a fonte dos dados sofreu uma atualização, e você quer trazer essa atualização para o seu dashboard, ou então, porque houve uma perda de dados no Power BI Online e você deseja recuperar esses dados perdidos.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Power BI</category>
  <category>Power BI Online</category>
  <guid>https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/pt/index.html</guid>
  <pubDate>Wed, 14 Dec 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2022/2022-12-14-power-bi-memory-error/featured.png" medium="image" type="image/png" height="52" width="144"/>
</item>
<item>
  <title>Introdução à Linguagem R: seus fundamentos e sua prática</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/publications/book/introducao_linguagem_R/pt/index.html</link>
  <description><![CDATA[ 




<section id="sobre-o-livro" class="level1">
<h1>Sobre o livro</h1>
<p><a href="https://www.amazon.com.br/dp/B0BNW4K232"> <button type="button" class="btn btn-primary">Compre uma versão do livro</button></a> <a href="https://pedropark99.github.io/Introducao_R/"> <button type="button" class="btn btn-primary">Leia online</button></a> <a href="./../exec_complete.pdf"> <button type="button" class="btn btn-primary">Exercícios de cada capítulo</button></a> <a href="./../respostas_complete.pdf"> <button type="button" class="btn btn-primary">Respostas dos exercícios</button></a></p>
<p>Este livro oferece uma descrição profunda sobre os fundamentos da linguagem R, e como eles se aplicam no contexto da análise de dados. Sua principal contribuição para a literatura brasileira hoje, está no combate de dois problemas recorrentes nos materiais disponíveis em português sobre a linguagem: 1) a falta de profundidade de muitos materiais, que tentam abordar muitos assuntos em um espaço muito curto; 2) a alta especialização de muitos materiais, que são de difícil transposição para aplicações gerais em análises de dados.</p>
</section>
<section id="o-que-você-aprende" class="level1">
<h1>O que você aprende ?</h1>
<p>Através deste livro, você pode aprender sobre os fundamentos da linguagem R, e como eles se aplicam a área de análise de dados. Em mais detalhes:</p>
<ul>
<li><p><strong>Introduzindo a linguagem</strong>: aprenda sobre como definir e como trabalhar com objetos; conheça as estruturas e tipos de dados oferecidos pela linguagem; entenda como os processos de coerção e os valores especiais da linguagem podem afetar os seus resultados.</p></li>
<li><p><strong>Importação e transformação</strong>: aprenda a importar, transformar e formatar suas tabelas através dos pacotes <code>readr</code>, <code>readxl</code>, <code>haven</code>, <code>dplyr</code> e <code>tidyr</code>. Aplicando operações de ordenação, filtro, seleção e expansão, além de operações de pivô e <em>join</em>’s.</p></li>
<li><p><strong>Visualização de dados</strong>: aprenda a utilizar o pacote <code>ggplot2</code> para produzir gráficos elegantes e efetivos para apresentar os seus dados e as suas conclusões.</p></li>
<li><p><strong>Programando a sua análise</strong>: aprenda a utilizar controles de fluxo, funções e <em>loops</em> para automatizar tarefas e solucionar os seus problemas de maneira simples e clara.</p></li>
<li><p><strong><em>Functional programming</em></strong>: aprenda a utilizar o pacote <code>purrr</code> para distribuir rapidamente os seus cálculos ao longo de múltiplos <em>inputs</em>.</p></li>
<li><p><strong><em>Debugging</em></strong> e <strong><em>environments</em></strong>: conheça as principais técnicas de <em>debugging</em> existentes na linguagem R, e, aprenda como investigar erros em suas funções. Além disso, entenda como a linguagem procura pelos seus objetos e, como você pode produzir resultados inesperados durante essa busca.</p></li>
</ul>
</section>
<section id="compre-uma-versão-física-do-livro" class="level1">
<h1>Compre uma versão física do livro!</h1>
<p>Você pode adquirir uma <a href="https://www.amazon.com.br/dp/B0BNW4K232">versão física do livro através da loja da Amazon</a>. Uma versão eBook do livro também está disponível. Ao adquirir esses produtos, você estará me ajudando a continuar com esse projeto e a contribuir com nossa comunidade brasileira de R.</p>
</section>
<section id="leia-o-livro-online" class="level1">
<h1>Leia o livro online</h1>
<p>Caso você não possa comprar uma versão física do livro, você ainda pode ler gratuitamente a obra completa através de seu <a href="https://pedropark99.github.io/Introducao_R/">site</a>.</p>
</section>
<section id="citando-o-livro" class="level1">
<h1>Citando o livro</h1>
<p>Arquivo BibTex:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>@book{pedro2022,
  title = {Introdução à Linguagem R},
  subtitle = {seus fundamentos e sua prática},
  author = {Pedro Duarte Faria},
  year = {2022},
  edition = {4},
  address = {Belo Horizonte},
  month = {Dezembro},
  isbn = {978-65-00-57872-0},
  note = {https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/}
}</code></pre>
</div>
</div>
</section>
<section id="contribua-para-o-projeto" class="level1">
<h1>Contribua para o projeto</h1>
<p>Você também pode contribuir diretamente para a obra, ao postar <em>pull requests</em> ou <em>issues</em> no <a href="https://github.com/pedropark99/Introducao_R">repositório oficial do livro</a> no GitHub.</p>
</section>
<section id="capa-do-livro" class="level1">
<h1>Capa do livro</h1>
<p><img src="https://pedro-faria.netlify.app/publications/book/introducao_linguagem_R/featured.png" class="img-fluid" style="width:100.0%"></p>


</section>

 ]]></description>
  <category>R Language</category>
  <category>Book</category>
  <category>Brazil</category>
  <guid>https://pedro-faria.netlify.app/publications/book/introducao_linguagem_R/pt/index.html</guid>
  <pubDate>Thu, 01 Dec 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/publications/book/introducao_linguagem_R/featured.png" medium="image" type="image/png" height="203" width="144"/>
</item>
<item>
  <title>Introducing the {figma} R package</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2022/2022-11-06-figma-pkgv0.1.0/en/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>I’m very happy to announce the realease of <code>figma</code> R package to CRAN! This package provides a R interface (or a web client/wrapper) to the <a href="https://www.figma.com/developers/api">Figma API</a>. Below we have all the important links about this package:</p>
<p><a href="https://github.com/pedropark99/figma"> <button type="button" class="btn btn-primary">Official repository</button></a> <a href="https://pedropark99.github.io/figma/"> <button type="button" class="btn btn-primary">Package website</button></a> <a href="https://cran.r-project.org/package=figma"> <button type="button" class="btn btn-primary">Page on CRAN</button></a></p>
<p>This is the first release (or the first version) of the package, and for now, it have all the necessary functionality to get all data from a Figma file, and bring it to your R session. But in the future, the package will include more functionalities and endpoints. Please, if you can, test this package and give feedbacks or report bugs by <a href="https://github.com/pedropark99/figma/issues">sending Issues on the official repository</a>.</p>
</section>
<section id="getting-started" class="level2">
<h2 class="anchored" data-anchor-id="getting-started">Getting started</h2>
<p>Fist of all, you need to install the package on your machine, and to do that, you can use this code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figma"</span>)</span></code></pre></div>
</div>
<p>Or, to install the development version directly from GitHub:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pedropark99/figma"</span>)</span></code></pre></div>
</div>
<p>Now, to get the data of a Figma file through the Figma API, you have to collect two key variables about your file and your credentials. They are:</p>
<ul>
<li><code>file_key</code>: The ID (or the “key”) that identifies your Figma file;</li>
<li><code>token</code>: Your personal access token from the Figma platform;</li>
</ul>
<p>To use specifically the <code>figma::get_figma_page()</code> function, you will need to collect a third information, which is the <code>node_id</code>, or the ID that identifies a canvas/page of your Figma file. I explain, in details, on how to collect these key variables on the <a href="https://pedropark99.github.io/figma/articles/figma.html">main vignette package</a>. For brevity reasons, lets assume in this blog post that you already have collected these variables.</p>
</section>
<section id="use-get_figma_file-to-get-your-figma-file" class="level2">
<h2 class="anchored" data-anchor-id="use-get_figma_file-to-get-your-figma-file">Use <code>get_figma_file()</code> to get your Figma file</h2>
<p>Now that you have the key (or ID) that identifies your Figma file, and your personal token that identifies yourself, you can use <code>figma::get_figma_file()</code> to get your Figma file:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(figma)</span>
<span id="cb3-2">file_key <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hch8YlkIrYbU3raDzjPvCz"</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Insert your personal token:</span></span>
<span id="cb3-4">token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your personal token ..."</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Returns a `httr::response` object:</span></span>
<span id="cb3-7">figma_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> figma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_figma_file</span>(</span>
<span id="cb3-8">  file_key, token</span>
<span id="cb3-9">)</span></code></pre></div>
</div>
<p>The functions from <code>figma</code> package returns a <code>httr::response</code> object by default. But you can use the <code>.output_format</code> argument to fit the data into a more intuitive data strucuture. For example, a <code>tibble::tibble</code> object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Returns a `tibble::tibble` object:</span></span>
<span id="cb4-2">figma_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> figma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_figma_file</span>(</span>
<span id="cb4-3">  file_key, token,</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.output_format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tibble"</span></span>
<span id="cb4-5">)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(figma_file)</span></code></pre></div>
</div>
<pre><code>#&gt; # A tibble: 5 × 7
#&gt;   canvas_id canvas_name canvas_type object_id object_name   objec…¹ object_att…²
#&gt;   &lt;chr&gt;     &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;         &lt;chr&gt;   &lt;list&gt;      
#&gt; 1 0:1       Page 1      CANVAS      1:2       Background    RECTAN… &lt;named list&gt;
#&gt; 2 0:1       Page 1      CANVAS      5:2       Paragraph     TEXT    &lt;named list&gt;
#&gt; 3 0:1       Page 1      CANVAS      5:3       Arrow         VECTOR  &lt;named list&gt;
#&gt; 4 5:4       Page 2      CANVAS      5:5       BackgroundPa… RECTAN… &lt;named list&gt;
#&gt; 5 5:4       Page 2      CANVAS      5:6       Texto da pág… TEXT    &lt;named list&gt;
#&gt; # … with abbreviated variable names ¹​object_type, ²​object_attributes</code></pre>
<p>Each row in the above <code>data.frame</code> is an object drawn in a canvas/page in your Figma file. Every object that you drawn in the canvas of your Figma file, can have a different type (like RECTANGLE, CIRCLE, TEXT, etc.). And objects of different types usually have different attributes.</p>
<p>For example, TEXT objects have a <code>characters</code> attribute, which have the exact text that is written in the text box. In the other hand, RECTANGLE objects does not have such attribute.</p>
<p>All the attributes of each object are in the <code>​object_attributes</code> column, which is a <code>&lt;list&gt;</code> column. Each row (or, if you prefer, each element) in this column is a list with all the attributes of the object described in the corresponding row. For example, to collect the <code>characters</code> attribute of the first TEXT object described in <code>figma_file</code> (which is in the 2nd row), you could do this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">figma_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>object_attributes[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"characters"</span>]]</span></code></pre></div>
</div>
<pre><code>[1] "Um texto qualquer, que não sei se vai dar certo"</code></pre>
<p>Or, you could the functions from <code>dplyr</code> and <code>purrr</code> packages to extract the <code>characters</code> attribute from all TEXT objects of your Figma file, like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">text_objects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> figma_file <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(object_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TEXT'</span>) </span>
<span id="cb8-3"></span>
<span id="cb8-4">text_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'object_attributes'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-5">  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_chr</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'characters'</span>)</span></code></pre></div>
</div>
<pre><code>[1] "Um texto qualquer, que não sei se vai dar certo" "Texto da página 2"</code></pre>
</section>
<section id="other-scopes-of-data" class="level1">
<h1>Other scopes of data</h1>
<p>The <code>figma::get_figma_file()</code> get the data of all objects drawn in all canvas/pages of a Figma file. But, maybe, you don’t need all data from your file. Maybe you just need the data from a section, or a specific part of your Figma file.</p>
<p>For these occasions, the <code>figma</code> package offers the <code>figma::get_figma_page()</code> (get data of objects drawn in a specific canvas/page of your file) and <code>figma::get_document_info()</code> (get metadata about your Figma file) functions.</p>
<p>These functions work basically the same way as <code>figma::get_figma_file()</code>, they have the same arguments (except <code>figma::get_figma_page()</code> which have a extra argument <code>node_id</code>). Check the <a href="https://pedropark99.github.io/figma/reference/index.html">documentation of these functions</a>, and the <a href="https://pedropark99.github.io/figma/articles/figma.html">main vignette of the package</a> to see examples.</p>


</section>

 ]]></description>
  <category>R Language</category>
  <category>Package</category>
  <category>Figma</category>
  <category>API</category>
  <guid>https://pedro-faria.netlify.app/posts/2022/2022-11-06-figma-pkgv0.1.0/en/index.html</guid>
  <pubDate>Sun, 06 Nov 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2022/2022-11-06-figma-pkgv0.1.0/featured.png" medium="image" type="image/png" height="79" width="144"/>
</item>
<item>
  <title>Novidades da 3° edição de Introdução à Linguagem R: seus fundamentos e sua prática</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2022/2022-04-06-3nd-edition-rbook/pt/index.html</link>
  <description><![CDATA[ 




<section id="introdução" class="level1">
<h1>Introdução</h1>
<p>É com muito prazer que venho compartilhar com você as novidades que estou trazendo para essa nova edição do livro <a href="https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/">Introdução à Linguagem R: seus fundamentos e sua prática</a>. O lançamento desta nova edição deve ocorrer ainda no meio de Abril de 2022 📆, portanto, fique atento 😉.</p>
</section>
<section id="o-que-temos-de-novo" class="level1">
<h1>O que temos de novo?</h1>
<p>Temos seis novos capítulos 🤯, os quais compõe uma nova parte do livro e, trazem consigo, grandes avanços sobre o processo de desenvolvimento de programas no R. Além disso, várias melhorias foram feitas em seções específicas do livro, especialmente sobre o capítulo 2.</p>
<p>Primeiro, houve uma reorganização significativa do livro. Os capítulos pré-existentes foram reorganizados em quatro partes diferentes. Já a quinta e nova parte (Funções e <em>Loops</em>: construindo os seus próprios programas e automatizando tarefas) é composta pelos seis novos capítulos introduzidos nesta edição.</p>
<p>Segundo, o capítulo de Funções e <em>Loops</em> foi completamente reescrito, expandido, e, repartido em dois novos capítulos 🥳🎉🎉🎉. Mais especificamente, os capítulos 14 (Funções) e 15 (<em>Loops</em>) desta edição.</p>
<p>Terceiro, o capítulo 16 desta edição traz uma das novidades programadas desde a segunda edição: um novo (e robusto) capítulo sobre <em>functional programming</em>. Com essa adição, esta obra se torna uma referência mais moderna e, se aproxima dos padrões adotados hoje pela comunidade internacional de R 😎.</p>
<p>Quarto, <em>environments</em> e as regras de <em>scoping</em> da linguagem são dois tópicos relativamente avançados, e que costumam causar certa confusão em muitos iniciantes. Por isso, um novo capítulo foi produzido para descrever essas funcionalidades que sustentam partes essenciais da linguagem, assim como de alguns dos pacotes que introduzimos ao longo do livro (e.g.&nbsp;<code>dplyr</code> e <code>ggplot2</code>).</p>
<p>Quinto, várias adições e melhorias foram feitas no capítulo 6 (Introdução a base de dados relacionais com <code>dplyr</code>) e, principalmente, no capítulo 2 (Fundamentos da Linguagem R). Dentre elas, temos: um novo estudo de caso (Importando os dados da PINTEC); novas seções sobre as funções <code>str()</code> e <code>is.*()</code>; melhorias significativas sobre as seções de Coerção no R e Valores especiais do R.</p>
<p>Sexto, foi introduzido um novo capítulo que descreve os controles condicionais de fluxo (<code>if else</code> <em>statements</em> e <code>switch()</code>) que a linguagem R oferece.</p>
<p>Sétimo, um novo e pequeno capítulo foi adicionado à segunda parte do livro, com o objetivo de introduzir o universo do <code>tidyverse</code> ao leitor de maneira mais clara e amigável 🥰.</p>
<p>Oitavo, o apêndice contendo as respostas dos exercícios foi retirado, com o objetivo de reduzir o número de páginas do livro. Consequentemente, as respostas dos exercícios estão sendo disponibilizadas em um PDF separado, o qual pode ser baixado gratuitamente, a partir da página de <a href="https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/">publicação do livro</a>.</p>
</section>
<section id="sobre-onde-encontrar-o-livro" class="level1">
<h1>Sobre onde encontrar o livro</h1>
<p>Assim como ocorreu nas edições anteriores, você poderá ler toda a obra de maneira gratuita e aberta através de seu <a href="https://pedropark99.github.io/Introducao_R/">website</a> 📖.</p>
<p>Contudo, diferente das edições anteriores, a versão em PDF da obra não será aberta. Você poderá adquirir uma versão em PDF ou física do livro através da loja da Amazon. Ao comprar essas versões, você estará me ajudando a continuar contribuindo com a nossa comunidade ❤️.</p>
</section>
<section id="contribua-para-a-obra-ou-faça-sugestões" class="level1">
<h1>Contribua para a obra ou faça sugestões!</h1>
<p>Caso seja de seu interesse, você pode contribuir diretamente para a obra, ao postar <em>pull requests</em> dentro de seu <a href="https://github.com/pedropark99/Introducao_R">repositório oficial</a>. Para mais, você também pode fazer sugestões ou comentários, ao postar <em>issues</em> neste mesmo repositório.</p>


</section>

 ]]></description>
  <category>Book</category>
  <category>R Language</category>
  <guid>https://pedro-faria.netlify.app/posts/2022/2022-04-06-3nd-edition-rbook/pt/index.html</guid>
  <pubDate>Wed, 06 Apr 2022 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2022/2022-04-06-3nd-edition-rbook/featured.png" medium="image" type="image/png" height="206" width="144"/>
</item>
<item>
  <title>Novidades da 2° edição de Introdução à Linguagem R: seus fundamentos e sua prática</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2021/2021-05-26-2nd-edition-rbook/pt/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<style type="text/css">
.hljs{
  font-family: 'Inconsolata', monospace;
  font-size: 17px;
}

.hljs.shell{
  font-size: 18px;
}

.hljs-comment{
  font-style: normal;
  color: #222222;
}
</style>
</div>
<section id="introdução" class="level1">
<h1>Introdução</h1>
<p>A medida em que eu e meu colega <a href="https://twitter.com/joaoparga">João Parga</a> começamos a ensinar sobre a Linguagem R, nós rapidamente percebemos a presença de vários materiais curtos, de qualidade e úteis<sup>1</sup>. Entretanto, também percebemos uma inquietante falta de materiais (em português) sobre a Linguagem R, que fossem mais técnicos ou que buscassem descrever a linguagem em mais detalhes.</p>
<p>Por esse motivo, nós construímos o livro <a href="https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/">Introdução à Linguagem R: seus fundamentos e sua prática</a>, que representa a nossa tentativa de preencher tal lacuna. A primeira edição do livro foi muito bem recebida, em especial, por ser uma obra aberta e gratuita para qualquer brasileiro.</p>
<p>Tendo isso em mente, 📣 é com muito prazer que anuncio oficialmente que a produção da segunda edição do livro está quase pronta!!! 🥳🎉🎊✨, que está para ser lançada agora no mês de Junho. Esse <em>post</em> busca descrever as novidades que estamos entregando para essa nova edição.</p>
</section>
<section id="resumo-das-novidades-para-a-nova-edição" class="level1">
<h1>Resumo das novidades para a nova edição</h1>
<p>Em resumo, há três novidades principais para essa nova edição, que incluem a adição de dois novos capítulos, além da adição de exercícios em cada capítulo (com respostas ao final do livro).</p>
<ul>
<li>Fatores (<code>factor</code>’s), <em>status</em>: capítulo finalizado ✅.</li>
<li>Variáveis de tempo (<code>date</code>, <code>POSIXct</code>, <code>POSIXlt</code>), <em>status</em>: capítulo finalizado ✅.</li>
<li>Introdução de exercícios em cada capítulo, <em>status</em>: ainda em processo de escrita 🚧.</li>
</ul>
</section>
<section id="sobre-o-lançamento" class="level1">
<h1>Sobre o lançamento</h1>
<p>Se tudo ocorrer conforme planejado:</p>
<ul>
<li><p>📣 O lançamento ocorrerá no <strong>dia 26/06</strong> 📌.</p></li>
<li><p>Nesse dia, o PDF da obra será disponibilizada em ambas as páginas do <a href="https://www.researchgate.net/publication/345985082_Introducao_a_Linguagem_R_seus_fundamentos_e_sua_pratica">ResearchGate</a> e no <a href="https://www.academia.edu/44520051/Introdu%C3%A7%C3%A3o_%C3%A0_Linguagem_R_seus_fundamentos_e_sua_pr%C3%A1tica">Academia</a>, que são os dois locais onde o livro está atualmente hospedado.</p></li>
</ul>
<p>A produção dessa nova edição se encontra avançada, mas pode enfrentar atrasos no próximo mês, pois recentemente assumi um novo emprego em uma grande empresa de tecnologia (<a href="https://www.take.net/">Take Blip</a>) e, portanto, posso ter que atrasar a produção em detrimento de demandas urgentes. Estou ansioso e torcendo muito para que nada de errado ocorra 😅, e que eu possa cumprir este compromisso com a nossa comunidade brasileira de R.</p>
</section>
<section id="sobre-cada-novidade" class="level1">
<h1>Sobre cada novidade:</h1>
<section id="adição-de-exercícios-em-cada-capítulo" class="level2">
<h2 class="anchored" data-anchor-id="adição-de-exercícios-em-cada-capítulo">Adição de exercícios em cada capítulo</h2>
<p>Desde o início, o livro se propôs a ser uma referência introdutória e, principalmente, <strong>técnica</strong>, sobre a linguagem. Isto significa que, o livro não tenta atingir o público que procura por algo sucinto e eficiente, mas sim, o público iniciante que busca se aprofundar (ou ter uma base mais sólida) em conceitos, métodos e outras partes importantes da linguagem.</p>
<p>Apesar desse propósito, o livro inicialmente não oferece exercícios, os quais são uma característica essencial de qualquer obra técnica. Por esse motivo, a introdução de exercícios em cada capítulo dessa segunda edição, busca ajudar o livro a caminhar para esse propósito, se tornando uma obra mais consolidada.</p>
<p>Atualmente, a construção dos exercícios para cada capítulo é a única parte (dessa nova edição) que ainda está em construção. A partir do momento em que essa etapa for finalizada, a segunda edição será lançada para todo o público brasileiro.</p>
</section>
<section id="fatores-factors" class="level2">
<h2 class="anchored" data-anchor-id="fatores-factors">Fatores (<code>factor</code>’s)</h2>
<p>No capítulo 2 do livro, são abordados os quatro tipos de dados básicos da linguagem R. Sendo eles: <code>integer</code>; <code>double</code>; <code>character</code>; e <code>logical</code>. Porém, há dois outros tipos de dados, que são “mais complexos”, e que também são muito importantes hoje em dia. São eles os fatores (ou <code>factor</code>’s) e os tipos voltados para variáveis de tempo (<code>date</code>, <code>POSIXct</code>, <code>POSIXlt</code>).</p>
<p>Fatores são especialmente úteis para classificarmos variáveis categóricos. Isto é, definirmos a ordem de seus “níveis” (ou “grupos”). Dito de outra forma, várias características podem ser descritas através de uma variável categórica, mas nem sempre essas características seguem uma ordenação numérica, ou uma ordem alfabética. Por exemplo, ao dar a sua avaliação de um certo governo, você pode responder “Péssimo”, “Ruim”, “Bom” ou “Muito Bom”. Perceba pela demonstração abaixo, que caso eu empregue uma ordenação alfabética (crescente) sobre as minhas respostas, “Bom” aparece antes de “Ruim”, “Péssimo” e “Muito Bom”.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">respostas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Muito Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Muito Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ruim"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Péssimo"</span>,</span>
<span id="cb1-2">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ruim"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ruim"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Muito Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ruim"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(respostas)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "Bom"       "Bom"       "Muito Bom" "Muito Bom" "Muito Bom" "Péssimo"  
 [7] "Ruim"      "Ruim"      "Ruim"      "Ruim"     </code></pre>
</div>
</div>
<p>Com o uso de fatores, nós podemos definir qual a ordem correta desses diferentes níveis e corrigir esse problema de ordenação. Perceba abaixo que a ordenação dos valores foi corrigida.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">respostas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(respostas)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(respostas) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Péssimo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ruim"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Muito Bom"</span>)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(respostas)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] Péssimo   Péssimo   Ruim      Ruim      Ruim      Bom       Muito Bom
 [8] Muito Bom Muito Bom Muito Bom
Levels: Péssimo Ruim Bom Muito Bom</code></pre>
</div>
</div>
</section>
<section id="variáveis-de-tempo" class="level2">
<h2 class="anchored" data-anchor-id="variáveis-de-tempo">Variáveis de tempo</h2>
<p>Firmas registram o horário em que vendas são realizadas, o horário em que cargas de insumos chegam a suas instalações, o tempo de trabalho de seus funcionários, além da evolução de vários de seus indicadores ao longo do tempo. Pois tempo é dinheiro, e, em uma economia capitalista o dinheiro é o que faz a diferença.</p>
<p>Por essa razão, variáveis de tempo são fundamentais em diversas análises de dados e, é muito importante que você saiba como trabalhar com elas em qualquer linguagem de programação que você venha a trabalhar. Por isso, essa é uma lacuna atual muito importante do livro e, que está sendo preenchida nessa segunda edição.</p>
<p>A linguagem R nos oferece três tipos principais de dados focados em variáveis de tempo, sendo eles: <code>Date</code>, <code>POSIXct</code>, <code>POSIXlt</code>. Além disso, temos ainda um quarto tipo de dado chamado <code>difftime</code>, que busca dar suporte às operações aritméticas entre os 3 tipos anteriores. Valores desses três tipos de dados, são criados a partir das funções <code>as.POSIXct()</code>, <code>as.POSIXlt()</code> e <code>as.Date()</code>.</p>
<p>O tipo <code>Date</code> nos ajuda a armazenar datas no R. Poderíamos armazenar datas como simples <em>strings</em>, mas com isso, teríamos uma ordenação incorreta dos valores, além da falta de acesso a diversos métodos aritméticos e computacionais voltados para esse tipo de dado. Logo, tratar as suas datas por meio do tipo <code>Date</code> pode fazer a diferença em sua análise.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">d <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-08-10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-08-11"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-08-12"</span>))</span>
<span id="cb5-2">d</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2020-08-10" "2020-08-11" "2020-08-12"</code></pre>
</div>
</div>
<p>Já o tipo <code>POSIXct</code> é particularmente útil para interpretar datas acompanhadas de um horário (isto é, um dado do tipo <code>date-time</code>). Certas transações econômicas precisam ser registradas com um nível de precisão alto. Ou seja, os registros de muitas empresas não se contentam com datas, pois eles também necessitam saber o momento exato (ou o horário exato) dessa data em que um evento ocorre. O tipo <code>POSIXct</code> foi feito justamente para tratar e lidar com esse tipo de informação.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-21 15:52:29"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-22 10:30:02"</span>))</span>
<span id="cb7-2">h</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2020-03-21 15:52:29 -03" "2020-03-22 10:30:02 -03"</code></pre>
</div>
</div>
<p>Por outro lado, o tipo <code>POSIXlt</code> pode ser especialmente útil quando desejamos extrair os componentes de uma variável de tempo específica. Por exemplo, podemos estar interessados apenas no dia do mês presente em cada valor, ou ainda, na hora do dia guardada em cada um desses valores. Tal ponto está demonstrado no exemplo abaixo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">hl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXlt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-21 15:52:29"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2020-03-22 10:30:02"</span>))</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## O dia de cada data:</span></span>
<span id="cb9-4">hl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mday</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 21 22</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## A hora do dia de cada data:</span></span>
<span id="cb11-2">hl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hour</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 15 10</code></pre>
</div>
</div>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Como os materiais produzidos pelo <a href="https://curso-r.com/material/">Curso-R</a>, ou este <a href="https://materiais-estudo-r.netlify.app/">índice de materiais</a> construído por Beatriz Milz.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Book</category>
  <category>R Language</category>
  <guid>https://pedro-faria.netlify.app/posts/2021/2021-05-26-2nd-edition-rbook/pt/index.html</guid>
  <pubDate>Wed, 26 May 2021 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2021/2021-05-26-2nd-edition-rbook/featured.png" medium="image" type="image/png" height="204" width="144"/>
</item>
<item>
  <title>Recipient table and source table</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/en/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<style type="text/css">
.hljs{
  font-family: 'Inconsolata', monospace;
  font-size: 17px;
}

.hljs.shell{
  font-size: 18px;
}

.hljs-comment{
  font-style: normal;
  color: #222222;
}
</style>
</div>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p><em>Outer joins</em> are a simple topic of understanding for most students. However, this article proposes a second approach on the subject. This approach was built during a recent reformulation of the chapter “Introdução a base de dados relacionais”, from the book <a href="https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/">Introdução à Linguagem R: seus fundamentos e sua prática</a>. The point of view presented here seeks to be strict, and uses this rigidity as a mechanism that facilitates the student`s memorization of the behaviors in each type of <em>outer join</em>.</p>
</section>
<section id="joins-have-direction" class="level1">
<h1>Joins have direction</h1>
<p>A <em>join</em> operation is nothing more than a union between two tables. But, instead of an union of two tables, we have another option for interpreting the result of this operation. So that to produce a table that represents the union between two tables, we could simply extract all the columns from one of the tables, and insert them into the other table.</p>
<p>For example, suppose you have a table <code>A</code>, which contains two columns, called <code>x</code> and <code>y</code>; and a table <code>B</code>, which in turn holds 4 different columns, named <code>x</code>, <code>z</code>, <code>r</code>, and <code>t</code>. Note that one of the columns in table <code>B</code> corresponds to the same column <code>x</code> that we found in table <code>A</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb1-2"></span>
<span id="cb1-3">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-6">)</span>
<span id="cb1-7"></span>
<span id="cb1-8">B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>),</span>
<span id="cb1-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tzu"</span></span>
<span id="cb1-13">)</span></code></pre></div>
</div>
<p>If you want to join tables <code>A</code> and <code>B</code>, you basically want to create a new table, which contains all five columns of these two tables (<code>x</code>, <code>y</code>, <code>z</code>, <code>r</code> and <code>t</code>). Therefore, we could imagine a <em>join</em> process, as if we were extracting all the columns from table <code>B</code>, and inserting all of these columns in table <code>A</code>. Hence, we have the table below as a result:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(A, B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 5
      x     y z         r t    
  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;
1     1  2.14 a       3.5 tzu  
2     2  2.61 b       2.1 tzu  
3     3  2.3  c       1   tzu  
4     4  4.12 d       5.6 tzu  
5     5  1.98 e       7.2 tzu  </code></pre>
</div>
</div>
<p>With this, we are creating the idea that <strong>a <em>join</em> always has a direction</strong>. In other words, we first extract the columns from table <code>B</code>, and then we add those columns to table <code>A</code>. Note that we are always starting from table <code>B</code> towards table <code>A</code>.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/direcao.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="recipient-table-and-source-table" class="level1">
<h1>Recipient table and source table</h1>
<p>From this perspective, we can interpret that, in a <em>join</em>, we are bringing all the columns of a secondary table into our main table (or our table of interest). We have the option to call these tables :<strong>source table</strong> (secondary table) and <strong>recipient table</strong> (main table). With this, a <em>join</em> always starts at <strong>source table</strong> and go towards the <strong>recipient table</strong>.</p>
<p>This perspective makes sense with the practice of <em>joins</em>. Because in any analysis, we commonly work with a “main” table, or a table that contains the key data we’re analyzing. And when we use some <em>join</em>, we’re usually bringing columns from other tables into this “main” table (or “recipient” table, according to that perspective). So keep in mind that a <em>join</em> always part from the <strong>source table</strong> toward the <strong>recipient table</strong>.</p>
</section>
<section id="types-of-outer-join" class="level1">
<h1>Types of <em>outer join</em></h1>
<p>A natural <em>join</em> (<em>inner join</em>) usually generates a loss of observations from both tables involved in the process. In contrast, a <em>join</em> of type <em>outer</em> (that is, an <em>outer join</em>), seeks to delimit which of the two tables will be preserved in the result. That is, an <em>outer join</em> seeks to keep in the <em>join</em> result, the rows of at least one of the tables involved.</p>
<p>We have three main types of <em>outer joins</em>, which are <em>left join</em>, <em>right join</em> and <em>full join</em>. A <em>full join</em> is the simplest to understand, as it seeks to keep all rows of both tables employed. Therefore, even if there is some observation not found in one of the tables, it will be preserved in the final product of the operation.</p>
<p>However, <em>left join</em> and <em>right join</em> seek to keep rows from only one of the tables used in <em>join</em>. At this point, many teachers would say something like: “if we want to apply a <em>join</em> between tables <code>A</code> and <code>B</code>, a <em>left join</em> will keep the rows of table <code>A</code>, and a <em>right join</em> will keep the rows of table <code>B</code>”. Other teachers would still try to say, “<em>left join</em> will keep the table rows on the left, while a <em>right join</em> will keep the table rows to the right”.</p>
<p>However, some confusion can be easily applied in both alternatives. I mean, a student can easily face the following question: “🤔 Uhmm… I don’t remember very well. Does a <em>left join</em> keep the rows in table <code>A</code>? Or are the rows in table <code>B</code>?”; or else, “🤔 Wait! But which of the two tables is on the right side?”</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>With this, according to the perspective adopted in this article, we can understand that a <em>left join</em> and a <em>right join</em> seek to keep the rows of the <strong>recipient table</strong> and the <strong>source table</strong>, respectively. Thus, when using a <em>right join</em> or a <em>left join</em>, you should ask yourself the following: “Do I want to keep the rows in my main table (recipient table)? Or the secondary table (source table), where I am extracting the new columns from?” So if you want to keep, for example, the rows in your main table (recipient table), which is what occurs most of the time, you now know that you need to use a <em>left join</em>.</p>
<p>In a visual representation, we can reproduce below the initial image of this article, which marks the lines maintained by each of these two types of <em>join</em>.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/featured.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <category>JOINs</category>
  <category>Teaching</category>
  <guid>https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/en/index.html</guid>
  <pubDate>Sat, 02 Jan 2021 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/featured.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Tabela destinatária e tabela fonte</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/pt/index.html</link>
  <description><![CDATA[ 




<div class="cell">
<style type="text/css">
.hljs{
  font-family: 'Inconsolata', monospace;
  font-size: 17px;
}

.hljs.shell{
  font-size: 18px;
}

.hljs-comment{
  font-style: normal;
  color: #222222;
}
</style>
</div>
<section id="introdução" class="level1">
<h1>Introdução</h1>
<p><em>Outer joins</em> são um tópico de simples compreensão para a maioria dos alunos. Entretanto, esse artigo propõe uma segunda abordagem sobre o tema. Tal abordagem foi construída durante uma reformulação recente do capítulo “Introdução a base de dados relacionais” do livro <a href="https://pedro-faria.netlify.app/pt/publication/book/introducao_linguagem_r/">Introdução à Linguagem R: seus fundamentos e sua prática</a>. O ponto de vista apresentado aqui, busca ser estrito, e utiliza essa rigidez como um mecanismo que facilite a memorização do aluno sobre os comportamentos de cada tipo de <em>outer join</em>.</p>
</section>
<section id="joins-possuem-sentido-e-direção" class="level1">
<h1>Joins possuem sentido e direção</h1>
<p>Uma operação de <em>join</em> é nada mais do que uma união entre duas tabelas. Por outro lado, temos uma outra opção de interpretação do resultado dessa operação. De modo que, para produzirmos uma tabela que represente a união entre duas tabelas, poderíamos simplesmente extrair todas as colunas de uma das tabelas, e inserí-las na outra tabela.</p>
<p>Por exemplo, suponha que você possua uma tabela <code>A</code>, que contém duas colunas, chamadas <code>x</code> e <code>y</code>; e uma tabela <code>B</code>, que por sua vez, guarda 4 colunas diferentes, denominadas <code>x</code>, <code>z</code>, <code>r</code>, e <code>t</code>. Perceba que uma das colunas na tabela <code>B</code>, corresponde a mesma coluna <code>x</code> que encontramos na tabela <code>A</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tibble)</span>
<span id="cb1-2"></span>
<span id="cb1-3">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-6">)</span>
<span id="cb1-7"></span>
<span id="cb1-8">B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>],</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>),</span>
<span id="cb1-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">t =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tzu"</span></span>
<span id="cb1-13">)</span></code></pre></div>
</div>
<p>Se você deseja unir as tabelas <code>A</code> e <code>B</code>, você basicamente deseja criar uma nova tabela, que contém todas as cinco colunas dessas duas tabelas (<code>x</code>, <code>y</code>, <code>z</code>, <code>r</code> e <code>t</code>). Portanto, poderíamos imaginar um processo de <em>join</em>, como se estivéssemos transportando todas as colunas da tabela <code>B</code>, para dentro da tabela <code>A</code>. Dessa maneira, temos a tabela abaixo como resultado:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(A, B, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 5
      x     y z         r t    
  &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;
1     1  1.5  a       3.5 tzu  
2     2  2.02 b       2.1 tzu  
3     3  1.34 c       1   tzu  
4     4  1.24 d       5.6 tzu  
5     5  2.49 e       7.2 tzu  </code></pre>
</div>
</div>
<p>Com isso, estamos criando a ideia de que <strong>um <em>join</em> possui sempre um sentido e uma direção</strong>. Em outras palavras, primeiro, extraímos as colunas da tabela <code>B</code>, e em seguida, acrescentamos essas colunas à tabela <code>A</code>. Repare que estamos sempre partindo da tabela <code>B</code> em direção a tabela <code>A</code>.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/direcao.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="tabela-destinatária-e-tabela-fonte" class="level1">
<h1>Tabela destinatária e tabela fonte</h1>
<p>Por essa perspectiva, podemos interpretar que, em um <em>join</em>, estamos trazendo todas as colunas de uma tabela secundária, para dentro de nossa tabela principal (ou a nossa tabela de interesse). Temos a opção de chamarmos essas tabelas de: <strong>tabela fonte</strong> (tabela secundária) e <strong>tabela destinatária</strong> (tabela principal). Com isso, temos que um <em>join</em> sempre parte da <strong>tabela fonte</strong> em direção à <strong>tabela destinatária</strong>.</p>
<p>Essa perspectiva faz sentido com a prática de <em>joins</em>. Pois em qualquer análise, nós comumente trabalhamos com uma tabela “principal”, ou uma tabela que contém os principais dados que estamos analisando. E quando utilizamos algum <em>join</em>, estamos geralmente trazendo colunas de outras tabelas para dentro dessa tabela “principal” (ou tabela “destinatária”, segundo essa perspectiva). Por isso, tenha em mente que um <em>join</em> sempre parte da <strong>tabela fonte</strong> em direção à <strong>tabela destinatária</strong>.</p>
</section>
<section id="tipos-de-outer-join" class="level1">
<h1>Tipos de <em>outer join</em></h1>
<p>Um <em>join</em> natural (<em>inner join</em>) usualmente gera uma perda de observações de ambas as tabelas envolvidas no processo. Em contrapartida, um <em>join</em> do tipo <em>outer</em> (isto é, um <em>outer join</em>), busca delimitar qual das duas tabelas será preservada no resultado. Ou seja, um <em>outer join</em> busca manter as linhas de pelo menos uma das tabelas envolvidas, no resultado do <em>join</em>.</p>
<p>Temos três tipos principais de <em>outer joins</em>, que são <em>left join</em>, <em>right join</em> e <em>full join</em>. O <em>full join</em> é o mais simples de se compreender, pois ele busca manter todas as linhas de ambas as tabelas empregadas. Logo, mesmo que haja alguma observação não encontrada em uma das tabelas, ela será preservada no produto final da operação.</p>
<p>No entanto, <em>left join</em> e <em>right join</em> buscam conservar as linhas de apenas uma das tabelas utilizadas no <em>join</em>. Nesse ponto, muitos professores diriam algo como: “se temos desejamos aplicar um <em>join</em> entre as tabelas <code>A</code> e <code>B</code>, um <em>left join</em> irá manter as linhas da tabela <code>A</code> e um <em>right join</em> vai manter as linhas da tabela <code>B</code>”. Outros professores ainda tentariam dizer: “<em>left join</em> irá manter as linhas da tabela à esquerda, enquanto um <em>right join</em> vai manter as linhas da tabela à direita”.</p>
<p>Porém, certa confusão pode ser facilmente aplicada em ambas alternativas. Digo, um aluno pode facilmente enfrentar a seguinte questão: “🤔 Uhmm… Eu não me lembro muito bem. Um <em>left join</em> mantém as linhas da tabela <code>A</code>? Ou são as linhas da tabela <code>B</code>?”; ou então, “🤔 Pera! Mas qual das duas tabelas está a direita?”.</p>
</section>
<section id="conclusão" class="level1">
<h1>Conclusão</h1>
<p>Com isso, segundo a perspectiva adotada nesse artigo, podemos entender que, um <em>left join</em> e um <em>right join</em> buscam manter as linhas da <strong>tabela destinatária</strong> e da <strong>tabela fonte</strong>, respectivamente. Dessa forma, ao utilizar um <em>right join</em> ou um <em>left join</em>, você deve se questionar o seguinte: “Eu quero manter as linhas de minha tabela principal (tabela destinatária)? Ou da tabela secundária (tabela fonte), de onde estou extraindo as novas colunas?”. Logo, se você deseja manter, por exemplo, as linhas de sua tabela principal (tabela destinatária), que é o que ocorre na maioria das vezes, você sabe agora que você precisa utilizar um <em>left join</em>.</p>
<p>Em uma representação visual, podemos reproduzir abaixo a imagem inicial desse artigo, que marca as linhas mantidas por cada um desses dois tipos de <em>join</em>.</p>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/featured.png" class="img-fluid"></p>
</div>
</div>


</section>

 ]]></description>
  <category>JOINs</category>
  <category>Teaching</category>
  <guid>https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/pt/index.html</guid>
  <pubDate>Sat, 02 Jan 2021 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2021/2021-01-02-tabela-destinataria-fonte/featured.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Resultados do Formulário de Pesquisa de Interesse - Curso Introdutório de R</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/pt/index.html</link>
  <description><![CDATA[ 




<p>Esse post faz parte de um projeto meu, de um Curso Introdutório de R. Esse projeto já tem um ano, que venho aperfeiçoando-o, e a primeira vez que ele foi posto em prática (ou seja, a primeira vez que dei um curso da linguagem) foi no instituto de pesquisa onde trabalho, a Fundação João Pinheiro<sup>1</sup>. Foi um momento muito proveitoso, pois uma das melhores formas de se aprender uma matéria, é tentando ensiná-la para outras pessoas.</p>
<p>Aprimorei e venho aprimorando constatemente o meu conhecimento da linguagem R, e agora, uma nova oportunidade de ensinar essa linguagem, surgiu através de um convite da CORECON-MG<sup>2</sup> Acadêmico. Com a ideia de compreendermos melhor as preferências do potencial público desse curso, nós lançamos um formulário de pesquisa no dia 10/10/2020.</p>
<p>Neste post, estarei analisando rapidamente as respostas que coletamos por esse formulário. Por motivos óbvios, as informações pessoais daqueles que responderam ao formulário, foram omitidas nesse artigo.</p>
<section id="tivemos-inclusive-pessoas-de-outros-países" class="level1">
<h1>Tivemos inclusive pessoas de outros países!</h1>
<p>No momento em que estou montando essa análise, tivemos no total, 122 respostas ao formulário. Mesmo sendo um número relativamente pequeno de pessoas, atingimos os mais diversos locais do país, abrangendo todas as cinco regiões do país.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(respostas)</span></code></pre></div>
</div>
<pre><code>[1] 122</code></pre>
<p>As respostas ao formulário não tinham um padrão bem definido, e por isso algumas respostas tiveram que ser ajustadas. Ao final desse ajuste, percebemos que pessoas de 61 instituições diferentes responderam ao formulário.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(instituicoes)</span></code></pre></div>
</div>
<pre><code>[1] 61</code></pre>
<p>A maior parte das instituições às quais os respondentes pertenciam, estão localizadas na região Sudeste, com 22 instituições. O Nordeste vem logo em seguida, com 16 insituições. Agora, as instituições que não foram designadas para alguma região (<code>NA</code>), são na verdade instituições de fora do Brasil. Isso significa que tivemos 5 respostas vindas de outros países, ao formulário de interesse no curso.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb5-2"></span>
<span id="cb5-3">instituicoes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Regiao) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contagem =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span></code></pre></div>
</div>
<pre><code># A tibble: 6 × 2
  Regiao       contagem
  &lt;chr&gt;           &lt;int&gt;
1 Centro Oeste        3
2 Nordeste           15
3 Norte               9
4 Sudeste            22
5 Sul                 7
6 NA                  5</code></pre>
<p>A maioria das pessoas que responderam ao formulário, provinham de instituições localizadas no estado Minas Gerais. Grande parte das respostas foram da UFOP (que é a instituição na qual estudo), totalizando 22 respostas. Além disso, não recebemos respostas de alguns estados, que estão marcados em cinza no gráfico abaixo:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geobr)</span>
<span id="cb7-2">brasil <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_state</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">resp_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> respostas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Regiao, Instituicao, abbrev, Estado) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Estado, Regiao) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contagem =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span>
<span id="cb8-5"></span>
<span id="cb8-6">brasil <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> brasil <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(resp_sum, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name_state"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Estado"</span>))</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> brasil) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Regiao)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_sf_coordinates</span>(</span>
<span id="cb8-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> contagem),</span>
<span id="cb8-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span></span>
<span id="cb8-14">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb8-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Número de respostas provenientes de cada estado brasileiro"</span>,</span>
<span id="cb8-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Região"</span></span>
<span id="cb8-19">  )</span></code></pre></div>
</div>
<p><img src="https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/resps-brasil.png" class="img-fluid"></p>
<p>Talvez o mais impressionante de tudo isso, é que tivemos pessoas de outros países interessadas no curso. Cada um desses outros países obtiveram apenas uma assinatura, mas mesmo assim, é no mínimo interessante ver o quão longe fomos. Os países atingidos (fora o Brasil), e as respectivas instituições dos respondentes foram: Venezuela (Universidad de Carabobo); Cuba (Universidad de la Havana); Moçambique (ISRI - Instituto Superior De Relações Internacionais); e Peru (Universidad Nacional de Ingeniaria); Portugal (Universidade de Lisboa).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">cores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb9-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brazil"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F8766D"</span>,</span>
<span id="cb9-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cuba"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BB9D00"</span>,</span>
<span id="cb9-4">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mozambique"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#7CAE00"</span>,</span>
<span id="cb9-5">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Venezuela"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00A5FF"</span>,</span>
<span id="cb9-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peru"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E76BF3"</span>,</span>
<span id="cb9-7">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Portugal"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4fc953"</span>,</span>
<span id="cb9-8">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Não foi atingido"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#d4d4d4"</span></span>
<span id="cb9-9">)</span>
<span id="cb9-10"></span>
<span id="cb9-11">world<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cores <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(cores[world<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>marca])</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> cores)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb9-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Países atingidos pelo formulário"</span>,</span>
<span id="cb9-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"País de referência"</span></span>
<span id="cb9-20">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_identity</span>(</span>
<span id="cb9-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"legend"</span>,</span>
<span id="cb9-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cores),</span>
<span id="cb9-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(cores)</span>
<span id="cb9-26">  )</span></code></pre></div>
</div>
<p><img src="https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/resps-world.png" class="img-fluid"></p>
</section>
<section id="assuntos-requisitados" class="level1">
<h1>Assuntos requisitados</h1>
<p>O R é uma linguagem que foi criada por estatísticos, e por isso, é uma linguagem especializada em análise de dados e estatística. Com isso, não é nenhuma surpresa que Econometria e Análise de Séries Temporais, tenham sido as principais sugestões e assuntos requisitados para o curso, pelas pessoas que responderam o formulário.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(wordcloud)</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(RColorBrewer)</span>
<span id="cb10-3"></span>
<span id="cb10-4">assuntos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> respostas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Sugestao)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Sugestao) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(n)</span>
<span id="cb10-9"></span>
<span id="cb10-10">cor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dark2"</span>)</span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cor) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>)</span>
<span id="cb10-12">assuntos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cor[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(assuntos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)]</span>
<span id="cb10-13"></span>
<span id="cb10-14"></span>
<span id="cb10-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud</span>(</span>
<span id="cb10-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">words =</span> assuntos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sugestao,</span>
<span id="cb10-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq =</span> assuntos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n,</span>
<span id="cb10-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.freq =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb10-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.words =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb10-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ordered.colors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb10-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rot.per =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>,</span>
<span id="cb10-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.r.layout =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb10-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb10-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colors =</span> assuntos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color</span>
<span id="cb10-25">)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/wordcloud.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="áreas-dos-respondentes" class="level1">
<h1>Áreas dos respondentes</h1>
<p>A enorme maioria das pessoas que responderam eram alunos de graduação, ou bachareis já formados. Como pode ser observado logo abaixo, tivemos também algumas pessoas com algum nível de pós-graduação.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(respostas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Nivel)</span></code></pre></div>
</div>
<pre><code>Doutorado Graduação  Mestrado 
        4       113         5 </code></pre>
<p>Curiosamente, das 9 pessoas que possuíam ou estavam fazendo pós-graduação (mestrado ou doutorado), 6 eram de alguma área da Saúde ou das Ciências Biológicas. Apenas uma dessas 9 pessoas, pertencia a área de Economia. Esse resultado faz sentido, visto que a linguagem R tem se expandido muito em algumas áreas como a epidemiologia e principalmente em análise genética, através de um conjunto de pacotes como o <code>Bioconductor</code><sup>3</sup>.</p>
<p>De qualquer maneira, olhando para o número geral de respondentes, a grande maioria do público atingido pelo formulário, foram graduandos (ou bachareis já formados) em Economia, totalizando 65 pessoas.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">respostas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Curso <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Economia"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>()</span></code></pre></div>
</div>
<pre><code>[1] 65</code></pre>
<p>Quanto às 52 pessoas restantes que não pertencem à area de Economia, as áreas atingidas foram bem diversas. Foram 5 pessoas de Agronomia e 4 pessoas de Geologia. As demais áreas marcadas em laranja abaixo, correspondem a 2 pessoas, enquanto todas as outras em ciano obtiveram apenas 1 respondente.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">areas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> respostas <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Curso <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Economia"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Curso) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(n)</span>
<span id="cb15-6"></span>
<span id="cb15-7">cor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dark2"</span>)</span>
<span id="cb15-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cor) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)</span>
<span id="cb15-9">areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(cor[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n)])</span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud</span>(</span>
<span id="cb15-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">words =</span> areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Curso,</span>
<span id="cb15-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">freq =</span> areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>n,</span>
<span id="cb15-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.freq =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.words =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,</span>
<span id="cb15-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ordered.colors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb15-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rot.per =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>,</span>
<span id="cb15-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.r.layout =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb15-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>),</span>
<span id="cb15-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> areas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>color</span>
<span id="cb15-21">)</span></code></pre></div>
</div>
<div class="cell">

</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>http://novosite.fjp.mg.gov.br/↩︎</p></li>
<li id="fn2"><p>Conselho Regional de Economia Acadêmico de Minas Gerais:http://corecon-mg.org.br/academico/↩︎</p></li>
<li id="fn3"><p>https://www.bioconductor.org/↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R Language</category>
  <category>Teaching</category>
  <guid>https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/pt/index.html</guid>
  <pubDate>Sat, 17 Oct 2020 03:00:00 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/posts/2020/2020-10-17-formulario-pesquisa/featured.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Introduction to pyspark</title>
  <dc:creator>Pedro Duarte Faria</dc:creator>
  <link>https://pedro-faria.netlify.app/publications/book/introd-pyspark/en/index.html</link>
  <description><![CDATA[ 




<section id="still-under-construction" class="level1">
<h1>Still under construction 🛠️ ⚠️!</h1>
<p>This book is still under active construction and development! This means that not all chapters are ready yet, and the current contents might change in the close future. However, you can already read some of its parts by <a href="https://pedropark99.github.io/Introd-pyspark/">visiting its website</a>.</p>
</section>
<section id="about-the-book" class="level1">
<h1>About the book</h1>
<p><a href="https://github.com/pedropark99/Introd-pyspark"> <button type="button" class="btn btn-primary">Official repository</button></a> <a href="https://pedropark99.github.io/Introd-pyspark/"> <button type="button" class="btn btn-primary">Read online</button></a></p>
<p>In summary, this book aims to give a solid introduction (for python and not python users) to the <code>pyspark</code> package, and on how to use it to build Spark applications for data pipelines and interactive data analysis.</p>
<p>Although we have a good range of materials about Apache Spark in general, such as <span class="citation" data-cites="damji2020">Damji et al. (2020)</span> and <span class="citation" data-cites="chambers2018">Chambers and Zaharia (2018)</span>, we do not have much abundance of materials about the APIs of Spark in “foreign” languages, like the Python (<code>pyspark</code>) and R (<code>SparkR</code>) APIs.</p>
<p>The reason for this is simple: the Spark API have a consistent structure across all languages. As consequence, a general book about Spark can fairly cover all languages at once. In other words, Spark code in Scala can be easily translated into python code with <code>pyspark</code>. Because the structure of the code is very similar between all languages.</p>
<p>So why this book? First, python is a more popular and friendly language than Scala or Java. If the reader is not interested in learning Java or Scala, why show Java/Scala code to him? Is very important to focus solely on what interest the reader, specially if it is in a language that he is familiar with. Second, I had some time to spent, and a lot of practical experience with <code>pyspark</code> on production to share (so… why not write a book about it?).</p>
</section>
<section id="cover" class="level1">
<h1>Cover</h1>
<p><img src="https://pedro-faria.netlify.app/publications/book/introd-pyspark/featured.png" class="img-fluid" style="width:100.0%"></p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-chambers2018" class="csl-entry">
Chambers, Bill, and Matei Zaharia. 2018. <em>Spark: The Definitive Guide: Big Data Processing Made Simple</em>. Sebastopol, CA: O’Reilly Media.
</div>
<div id="ref-damji2020" class="csl-entry">
Damji, Jules, Brooke Wenig, Tathagata Das, and Denny Lee. 2020. <em>Learning Spark: Lightning-Fast Data Analytics</em>. Sebastopol, CA: O’Reilly Media.
</div>
</div></section></div> ]]></description>
  <category>Python</category>
  <category>Apache Spark</category>
  <category>Book</category>
  <guid>https://pedro-faria.netlify.app/publications/book/introd-pyspark/en/index.html</guid>
  <pubDate>Tue, 16 May 2023 00:46:10 GMT</pubDate>
  <media:content url="https://pedro-faria.netlify.app/publications/book/introd-pyspark/featured.png" medium="image" type="image/png" height="215" width="144"/>
</item>
</channel>
</rss>
