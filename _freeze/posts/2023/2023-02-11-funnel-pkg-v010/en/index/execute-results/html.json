{
  "hash": "1814333404ab3552daa2f6029ab555f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Introducing the `{ggfunnel}` R package\ndescription: In this post, I want to introduce an experimental R package üì¶ which you can use to build Power BI like funnel charts in R.\nimage: \"./../background-ggfunnel.png\"\n\ndate: 2023-02-11\ncategories: ['R', 'Package', 'Power BI', 'Funnel charts']\ntoc: false\n---\n\n\n# Introduction\n\nAt my work, I use a lot of funnel charts. Because they are a very effective visualization to see losses trough a sequence of steps in a sales process (or a \"sales path\"). I usually build these funnel charts in a very popular Microsoft tool called Power BI. \n\nThis tool is very popular to build interactive dashboards, and it offers many different native visuals and type of charts to build your visualizations. One visual in particular, is the native funnel chart visual which you can use to visualize your data in a funnel chart, like in the example below:\n\n![A funnel chart at Power BI](./../power-bi.png)\n\nBut after working a lot with these charts in Power BI, I tought to myself: \"could I make a funnel chart in R?\". The answer is obviously yes! You could definitely drawn a funnel chart with frameworks such as the `ggplot2` package. However, there was no packages in the community that could build such visualization out of the box.\n\nSo I decided to develop a small and experimental R package that could drawn this type of chart. This is how `{ggfunnel}` was born. In essence, with `{ggfunnel}`, you can build Power BI like funnel charts in R. The `{ggfunnel}` package uses the `{ggplot2}` package (or, more specifically, the `ggplot2::geom_tile()` geom) to build the funnel chart.\n\n<a href=\"https://github.com/pedropark99/ggfunnel\"> <button type=\"button\" class=\"btn btn-primary\">Official repository</button></a>\n<a href=\"https://pedropark99.github.io/ggfunnel/\"> <button type=\"button\" class=\"btn btn-primary\">Package website</button></a>\n\n\n\n# How to get it ?\n\nFor now, `{ggfunnel}` is available only at GitHub. You can download and install the package with the `devtools::install_github()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"pedropark99/ggfunnel\")\n```\n:::\n\n\n\n\n\n# A small example of use\n\nThe main functionality of the package is at a function called `ggfunnel::funnel()`, which is responsible for producing the plot. You usually define 3 arguments in this function, which are:\n\n- `data`: the data.frame with the data you want to use in the plot;\n- `values`: the column name where are the values you want to display in your funnel chart. In other words, the numerical data that you want to visualize in the chart;\n- `levels`: the column name with the ‚Äúlevels‚Äù (or the ‚Äúgroups‚Äù) you want to display in your funnel chart. In other words, the categorical data that identifies each level in the funnel;\n\nIn the example below, we are using the `ggfunnel::aggregates` data.frame to build a basic funnel chart:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggfunnel)\nggfunnel::aggregates\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 √ó 2\n  Step  N_users\n  <chr>   <dbl>\n1 A        4389\n2 B        3100\n3 C        2005\n4 D         500\n5 E         120\n```\n\n\n:::\n:::\n\n\n\nThe `N_users` column is the column with numerical data, so I give it to the `values` argument of the function. This way, these values will be used to determine the widths of each rectangle in the funnel chart.\n\nIn contrast, the `Step` column contains the categorical data of the dataset. That is why I gave this column to the `levels` argument of the function. As a result, the values of this column will be used to determine the ‚Äúlevels‚Äù of the funnel chart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- ggfunnel::funnel(\n    data = ggfunnel::aggregates,\n    values = N_users, levels = Step\n  )\n\nprint(plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe above plot is very simple. However, since the output of `ggfunnel::funnel()` is a native `ggplot` object, you can customize and extend the plot greatly with the `{ggplot2}` package. I give examples and details on how you can customize this output at the main vignette (`vignette(\"funnel\")`) of the package, which you can [read at the website of the package](https://pedropark99.github.io/ggfunnel/articles/funnel.html).\n\nJust as a small demonstration, I can add titles to the plot, adjust the theme, and add some notes and arrows to emphasize some parts of the plot. I can also use other packages which extends `{ggplot2}` to add more custom outputs to the plot, such as the `{ggtext}` package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- ggfunnel::aggregates |>\n  ggfunnel::funnel(\n    values = N_users, levels = Step,\n    text_specs = list(\n      nudge_x = c(rep(0, times = 4), 0.05),\n      colour = c(rep(\"white\", times = 4), \"black\")\n    )\n  )\n\nnote <- \"We lost **75% of the users**<br>from step \\\"C\\\" to step \\\"D\\\"\"\n\nplot +\n  ggplot2::labs(\n    title = \"Funnel of users in each step of the sales path\",\n    subtitle = \"The biggest loss of users is at the \\\"D\\\" step\",\n    y = NULL\n  ) +\n  ggplot2::theme(\n    plot.title = ggplot2::element_text(face = \"bold\", size = 16),\n    plot.title.position = \"plot\"\n  ) +\n  ggtext::geom_richtext(\n    ggplot2::aes(x = 0.35, y = \"D\",\n    label = note),\n    label.color = NA\n  ) +\n  ggplot2::geom_segment(\n    ggplot2::aes(x = 0.17, xend = 0.07, y = \"D\", yend = \"D\"), \n    arrow = ggplot2::arrow(\n      length = ggplot2::unit(0.25, \"cm\")\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n# A simple (but far from perfect) approach\n\n`{ggfunnel}` is a very simple (and kind of experimental) package, and it is far from perfect. This means that, currently, `{ggfunnel}` gives you the minimal code necessary to produce a decent funnel chart. But it does not give you much more functionality than that. \n\nIt also makes some assumptions about your data that might not hold, and it does not contain some features that you might find at Power BI (e.g. percentage labels).\n\nBut, even being a very simple package, `ggfunnel::funnel()` always returns the raw `ggplot` object that describes the funnel chart. This means that the package gives you a lot of freedom to customize (or to complement) the output in the way you might need. See [`vignette(\"funnel\")`](https://pedropark99.github.io/ggfunnel/articles/funnel.html) for more details on how to customize/complement the `ggfunnel::funnel()` output.\n\nHowever, the package needs some work to be a more robust and complete piece of code, for sure. If you think you can make `{ggfunnel}` better I would be happy to review a PR from you!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}